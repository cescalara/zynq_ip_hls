

================================================================
== Vivado HLS Report for 'scurve_adder'
================================================================
* Date:           Fri Nov 11 12:50:47 2016

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        scurve_adder
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|      4.05|        0.62|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                         |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- scurve_adder_label0    |    8|    8|         1|          1|          1|     8|    yes   |
        |- L_scurve_adder_label1  |    ?|    ?|         5|          1|          1|     ?|    yes   |
        |- scurve_adder_label2    |   16|   16|         2|          1|          1|    16|    yes   |
        +-------------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 1, depth = 5
  * Pipeline-2: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 13
* Pipeline: 3
  Pipeline-0: II = 1, D = 1, States = { 2 }
  Pipeline-1: II = 1, D = 5, States = { 4 5 6 7 8 }
  Pipeline-2: II = 1, D = 2, States = { 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond1)
	2  / (!exitcond1)
3 --> 
	4  / true
4 --> 
	9  / (exitcond_flatten)
	5  / (!exitcond_flatten)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	4  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	13  / (exitcond)
	12  / (!exitcond)
12 --> 
	11  / true
13 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_14 [1/1] 0.00ns
.preheader89:0  call void (...)* @_ssdm_op_SpecBitsMap(i16* %inStream_V_data_V), !map !62

ST_1: stg_15 [1/1] 0.00ns
.preheader89:1  call void (...)* @_ssdm_op_SpecBitsMap(i2* %inStream_V_keep_V), !map !66

ST_1: stg_16 [1/1] 0.00ns
.preheader89:2  call void (...)* @_ssdm_op_SpecBitsMap(i2* %inStream_V_strb_V), !map !70

ST_1: stg_17 [1/1] 0.00ns
.preheader89:3  call void (...)* @_ssdm_op_SpecBitsMap(i2* %inStream_V_user_V), !map !74

ST_1: stg_18 [1/1] 0.00ns
.preheader89:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %inStream_V_last_V), !map !78

ST_1: stg_19 [1/1] 0.00ns
.preheader89:5  call void (...)* @_ssdm_op_SpecBitsMap(i5* %inStream_V_id_V), !map !82

ST_1: stg_20 [1/1] 0.00ns
.preheader89:6  call void (...)* @_ssdm_op_SpecBitsMap(i6* %inStream_V_dest_V), !map !86

ST_1: stg_21 [1/1] 0.00ns
.preheader89:7  call void (...)* @_ssdm_op_SpecBitsMap(i32* %outStream_V_data_V), !map !90

ST_1: stg_22 [1/1] 0.00ns
.preheader89:8  call void (...)* @_ssdm_op_SpecBitsMap(i4* %outStream_V_keep_V), !map !94

ST_1: stg_23 [1/1] 0.00ns
.preheader89:9  call void (...)* @_ssdm_op_SpecBitsMap(i4* %outStream_V_strb_V), !map !98

ST_1: stg_24 [1/1] 0.00ns
.preheader89:10  call void (...)* @_ssdm_op_SpecBitsMap(i2* %outStream_V_user_V), !map !102

ST_1: stg_25 [1/1] 0.00ns
.preheader89:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %outStream_V_last_V), !map !106

ST_1: stg_26 [1/1] 0.00ns
.preheader89:12  call void (...)* @_ssdm_op_SpecBitsMap(i5* %outStream_V_id_V), !map !110

ST_1: stg_27 [1/1] 0.00ns
.preheader89:13  call void (...)* @_ssdm_op_SpecBitsMap(i6* %outStream_V_dest_V), !map !114

ST_1: stg_28 [1/1] 0.00ns
.preheader89:14  call void (...)* @_ssdm_op_SpecBitsMap(i32 %param), !map !118

ST_1: stg_29 [1/1] 0.00ns
.preheader89:15  call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @scurve_adder_str) nounwind

ST_1: param_read [1/1] 1.00ns
.preheader89:16  %param_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %param)

ST_1: sum_pix1 [1/1] 0.00ns
.preheader89:17  %sum_pix1 = alloca [8 x i32], align 16

ST_1: sum_pix2 [1/1] 0.00ns
.preheader89:18  %sum_pix2 = alloca [8 x i32], align 16

ST_1: dub_pix_keep_V [1/1] 0.00ns
.preheader89:19  %dub_pix_keep_V = alloca [8 x i2], align 1

ST_1: dub_pix_strb_V [1/1] 0.00ns
.preheader89:20  %dub_pix_strb_V = alloca [8 x i2], align 1

ST_1: dub_pix_user_V [1/1] 0.00ns
.preheader89:21  %dub_pix_user_V = alloca [8 x i2], align 1

ST_1: dub_pix_last_V [1/1] 0.00ns
.preheader89:22  %dub_pix_last_V = alloca [8 x i1], align 1

ST_1: dub_pix_id_V [1/1] 0.00ns
.preheader89:23  %dub_pix_id_V = alloca [8 x i5], align 1

ST_1: dub_pix_dest_V [1/1] 0.00ns
.preheader89:24  %dub_pix_dest_V = alloca [8 x i6], align 1

ST_1: stg_39 [1/1] 0.00ns
.preheader89:25  call void (...)* @_ssdm_op_SpecInterface(i16* %inStream_V_data_V, i2* %inStream_V_keep_V, i2* %inStream_V_strb_V, i2* %inStream_V_user_V, i1* %inStream_V_last_V, i5* %inStream_V_id_V, i6* %inStream_V_dest_V, [5 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_40 [1/1] 0.00ns
.preheader89:26  call void (...)* @_ssdm_op_SpecInterface(i32* %outStream_V_data_V, i4* %outStream_V_keep_V, i4* %outStream_V_strb_V, i2* %outStream_V_user_V, i1* %outStream_V_last_V, i5* %outStream_V_id_V, i6* %outStream_V_dest_V, [5 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_41 [1/1] 0.00ns
.preheader89:27  call void (...)* @_ssdm_op_SpecInterface(i32 %param, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_42 [1/1] 0.00ns
.preheader89:28  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_43 [1/1] 1.57ns
.preheader89:29  br label %0


 <State 2>: 2.39ns
ST_2: i [1/1] 0.00ns
:0  %i = phi i4 [ %i_1, %1 ], [ 0, %.preheader89 ]

ST_2: exitcond1 [1/1] 1.88ns
:1  %exitcond1 = icmp eq i4 %i, -8

ST_2: i_1 [1/1] 0.80ns
:2  %i_1 = add i4 %i, 1

ST_2: stg_47 [1/1] 0.00ns
:3  br i1 %exitcond1, label %.preheader84.preheader, label %1

ST_2: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_2: stg_49 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([20 x i8]* @p_str4) nounwind

ST_2: tmp_3 [1/1] 0.00ns
:2  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([20 x i8]* @p_str4)

ST_2: stg_51 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: tmp [1/1] 0.00ns
:4  %tmp = zext i4 %i to i64

ST_2: sum_pix1_addr [1/1] 0.00ns
:5  %sum_pix1_addr = getelementptr inbounds [8 x i32]* %sum_pix1, i64 0, i64 %tmp

ST_2: stg_54 [1/1] 2.39ns
:6  store i32 0, i32* %sum_pix1_addr, align 4

ST_2: sum_pix2_addr [1/1] 0.00ns
:7  %sum_pix2_addr = getelementptr inbounds [8 x i32]* %sum_pix2, i64 0, i64 %tmp

ST_2: stg_56 [1/1] 2.39ns
:8  store i32 0, i32* %sum_pix2_addr, align 4

ST_2: empty_7 [1/1] 0.00ns
:9  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([20 x i8]* @p_str4, i32 %tmp_3)

ST_2: stg_58 [1/1] 0.00ns
:10  br label %0


 <State 3>: 1.57ns
ST_3: tmp_2 [1/1] 0.00ns
.preheader84.preheader:0  %tmp_2 = call i35 @_ssdm_op_BitConcatenate.i35.i32.i3(i32 %param_read, i3 0)

ST_3: stg_60 [1/1] 1.57ns
.preheader84.preheader:1  br label %.preheader83


 <State 4>: 4.05ns
ST_4: indvar_flatten [1/1] 0.00ns
.preheader83:0  %indvar_flatten = phi i35 [ 0, %.preheader84.preheader ], [ %indvar_flatten_next, %.preheader84 ]

ST_4: k [1/1] 0.00ns
.preheader83:1  %k = phi i4 [ 0, %.preheader84.preheader ], [ %k_1, %.preheader84 ]

ST_4: exitcond_flatten [1/1] 2.54ns
.preheader83:2  %exitcond_flatten = icmp eq i35 %indvar_flatten, %tmp_2

ST_4: indvar_flatten_next [1/1] 2.56ns
.preheader83:3  %indvar_flatten_next = add i35 %indvar_flatten, 1

ST_4: stg_65 [1/1] 0.00ns
.preheader83:4  br i1 %exitcond_flatten, label %.preheader.preheader, label %.preheader84

ST_4: exitcond2 [1/1] 1.88ns
.preheader84:1  %exitcond2 = icmp eq i4 %k, -8

ST_4: k_mid2 [1/1] 1.37ns
.preheader84:2  %k_mid2 = select i1 %exitcond2, i4 0, i4 %k

ST_4: empty_8 [1/1] 0.00ns
.preheader84:7  %empty_8 = call { i16, i2, i2, i2, i1, i5, i6 } @_ssdm_op_Read.axis.volatile.i16P.i2P.i2P.i2P.i1P.i5P.i6P(i16* %inStream_V_data_V, i2* %inStream_V_keep_V, i2* %inStream_V_strb_V, i2* %inStream_V_user_V, i1* %inStream_V_last_V, i5* %inStream_V_id_V, i6* %inStream_V_dest_V)

ST_4: tmp_data_V [1/1] 0.00ns
.preheader84:8  %tmp_data_V = extractvalue { i16, i2, i2, i2, i1, i5, i6 } %empty_8, 0

ST_4: tmp_keep_V [1/1] 0.00ns
.preheader84:9  %tmp_keep_V = extractvalue { i16, i2, i2, i2, i1, i5, i6 } %empty_8, 1

ST_4: tmp_strb_V [1/1] 0.00ns
.preheader84:10  %tmp_strb_V = extractvalue { i16, i2, i2, i2, i1, i5, i6 } %empty_8, 2

ST_4: tmp_user_V [1/1] 0.00ns
.preheader84:11  %tmp_user_V = extractvalue { i16, i2, i2, i2, i1, i5, i6 } %empty_8, 3

ST_4: tmp_last_V [1/1] 0.00ns
.preheader84:12  %tmp_last_V = extractvalue { i16, i2, i2, i2, i1, i5, i6 } %empty_8, 4

ST_4: tmp_id_V [1/1] 0.00ns
.preheader84:13  %tmp_id_V = extractvalue { i16, i2, i2, i2, i1, i5, i6 } %empty_8, 5

ST_4: tmp_dest_V [1/1] 0.00ns
.preheader84:14  %tmp_dest_V = extractvalue { i16, i2, i2, i2, i1, i5, i6 } %empty_8, 6

ST_4: tmp_6 [1/1] 0.00ns
.preheader84:27  %tmp_6 = trunc i16 %tmp_data_V to i8

ST_4: phitmp [1/1] 0.00ns
.preheader84:28  %phitmp = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_data_V, i32 8, i32 15)

ST_4: k_1 [1/1] 0.80ns
.preheader84:40  %k_1 = add i4 1, %k_mid2


 <State 5>: 2.39ns
ST_5: tmp_4 [1/1] 0.00ns
.preheader84:6  %tmp_4 = zext i4 %k_mid2 to i64

ST_5: dub_pix_keep_V_addr_1 [1/1] 0.00ns
.preheader84:15  %dub_pix_keep_V_addr_1 = getelementptr [8 x i2]* %dub_pix_keep_V, i64 0, i64 %tmp_4

ST_5: stg_81 [1/1] 2.39ns
.preheader84:16  store i2 %tmp_keep_V, i2* %dub_pix_keep_V_addr_1, align 2

ST_5: dub_pix_strb_V_addr_1 [1/1] 0.00ns
.preheader84:17  %dub_pix_strb_V_addr_1 = getelementptr [8 x i2]* %dub_pix_strb_V, i64 0, i64 %tmp_4

ST_5: stg_83 [1/1] 2.39ns
.preheader84:18  store i2 %tmp_strb_V, i2* %dub_pix_strb_V_addr_1, align 1

ST_5: dub_pix_user_V_addr_1 [1/1] 0.00ns
.preheader84:19  %dub_pix_user_V_addr_1 = getelementptr [8 x i2]* %dub_pix_user_V, i64 0, i64 %tmp_4

ST_5: stg_85 [1/1] 2.39ns
.preheader84:20  store i2 %tmp_user_V, i2* %dub_pix_user_V_addr_1, align 4

ST_5: dub_pix_last_V_addr_1 [1/1] 0.00ns
.preheader84:21  %dub_pix_last_V_addr_1 = getelementptr [8 x i1]* %dub_pix_last_V, i64 0, i64 %tmp_4

ST_5: stg_87 [1/1] 2.39ns
.preheader84:22  store i1 %tmp_last_V, i1* %dub_pix_last_V_addr_1, align 1

ST_5: dub_pix_id_V_addr_1 [1/1] 0.00ns
.preheader84:23  %dub_pix_id_V_addr_1 = getelementptr [8 x i5]* %dub_pix_id_V, i64 0, i64 %tmp_4

ST_5: stg_89 [1/1] 2.39ns
.preheader84:24  store i5 %tmp_id_V, i5* %dub_pix_id_V_addr_1, align 2

ST_5: dub_pix_dest_V_addr_1 [1/1] 0.00ns
.preheader84:25  %dub_pix_dest_V_addr_1 = getelementptr [8 x i6]* %dub_pix_dest_V, i64 0, i64 %tmp_4

ST_5: stg_91 [1/1] 2.39ns
.preheader84:26  store i6 %tmp_dest_V, i6* %dub_pix_dest_V_addr_1, align 1

ST_5: sum_pix1_addr_1 [1/1] 0.00ns
.preheader84:30  %sum_pix1_addr_1 = getelementptr inbounds [8 x i32]* %sum_pix1, i64 0, i64 %tmp_4

ST_5: sum_pix1_load [2/2] 2.39ns
.preheader84:31  %sum_pix1_load = load i32* %sum_pix1_addr_1, align 4

ST_5: sum_pix2_addr_1 [1/1] 0.00ns
.preheader84:35  %sum_pix2_addr_1 = getelementptr inbounds [8 x i32]* %sum_pix2, i64 0, i64 %tmp_4

ST_5: sum_pix2_load [2/2] 2.39ns
.preheader84:36  %sum_pix2_load = load i32* %sum_pix2_addr_1, align 4


 <State 6>: 2.39ns
ST_6: sum_pix1_load [1/2] 2.39ns
.preheader84:31  %sum_pix1_load = load i32* %sum_pix1_addr_1, align 4

ST_6: sum_pix2_load [1/2] 2.39ns
.preheader84:36  %sum_pix2_load = load i32* %sum_pix2_addr_1, align 4


 <State 7>: 2.44ns
ST_7: tmp_8 [1/1] 0.00ns
.preheader84:29  %tmp_8 = zext i8 %tmp_6 to i32

ST_7: tmp_9 [1/1] 2.44ns
.preheader84:32  %tmp_9 = add nsw i32 %tmp_8, %sum_pix1_load

ST_7: tmp_s [1/1] 0.00ns
.preheader84:34  %tmp_s = zext i8 %phitmp to i32

ST_7: tmp_1 [1/1] 2.44ns
.preheader84:37  %tmp_1 = add nsw i32 %tmp_s, %sum_pix2_load


 <State 8>: 2.39ns
ST_8: stg_102 [1/1] 0.00ns
.preheader84:0  call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @L_scurve_adder_label1_str)

ST_8: stg_103 [1/1] 0.00ns
.preheader84:3  call void (...)* @_ssdm_op_SpecLoopName([20 x i8]* @p_str5) nounwind

ST_8: tmp_5 [1/1] 0.00ns
.preheader84:4  %tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([20 x i8]* @p_str5)

ST_8: stg_105 [1/1] 0.00ns
.preheader84:5  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: stg_106 [1/1] 2.39ns
.preheader84:33  store i32 %tmp_9, i32* %sum_pix1_addr_1, align 4

ST_8: stg_107 [1/1] 2.39ns
.preheader84:38  store i32 %tmp_1, i32* %sum_pix2_addr_1, align 4

ST_8: empty_9 [1/1] 0.00ns
.preheader84:39  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([20 x i8]* @p_str5, i32 %tmp_5)

ST_8: stg_109 [1/1] 0.00ns
.preheader84:41  br label %.preheader83


 <State 9>: 2.39ns
ST_9: dub_pix_keep_V_addr [1/1] 0.00ns
.preheader.preheader:0  %dub_pix_keep_V_addr = getelementptr [8 x i2]* %dub_pix_keep_V, i64 0, i64 0

ST_9: dub_pix_strb_V_addr [1/1] 0.00ns
.preheader.preheader:1  %dub_pix_strb_V_addr = getelementptr [8 x i2]* %dub_pix_strb_V, i64 0, i64 0

ST_9: dub_pix_user_V_addr [1/1] 0.00ns
.preheader.preheader:2  %dub_pix_user_V_addr = getelementptr [8 x i2]* %dub_pix_user_V, i64 0, i64 0

ST_9: dub_pix_last_V_addr [1/1] 0.00ns
.preheader.preheader:3  %dub_pix_last_V_addr = getelementptr [8 x i1]* %dub_pix_last_V, i64 0, i64 0

ST_9: dub_pix_id_V_addr [1/1] 0.00ns
.preheader.preheader:4  %dub_pix_id_V_addr = getelementptr [8 x i5]* %dub_pix_id_V, i64 0, i64 0

ST_9: dub_pix_dest_V_addr [1/1] 0.00ns
.preheader.preheader:5  %dub_pix_dest_V_addr = getelementptr [8 x i6]* %dub_pix_dest_V, i64 0, i64 0

ST_9: dub_pix_keep_V_load [2/2] 2.39ns
.preheader.preheader:6  %dub_pix_keep_V_load = load i2* %dub_pix_keep_V_addr, align 2

ST_9: dub_pix_strb_V_load [2/2] 2.39ns
.preheader.preheader:8  %dub_pix_strb_V_load = load i2* %dub_pix_strb_V_addr, align 1

ST_9: tmp_user_V_1 [2/2] 2.39ns
.preheader.preheader:10  %tmp_user_V_1 = load i2* %dub_pix_user_V_addr, align 4

ST_9: tmp_last_V_1 [2/2] 2.39ns
.preheader.preheader:11  %tmp_last_V_1 = load i1* %dub_pix_last_V_addr, align 1

ST_9: tmp_id_V_1 [2/2] 2.39ns
.preheader.preheader:12  %tmp_id_V_1 = load i5* %dub_pix_id_V_addr, align 2

ST_9: tmp_dest_V_1 [2/2] 2.39ns
.preheader.preheader:13  %tmp_dest_V_1 = load i6* %dub_pix_dest_V_addr, align 1


 <State 10>: 2.39ns
ST_10: dub_pix_keep_V_load [1/2] 2.39ns
.preheader.preheader:6  %dub_pix_keep_V_load = load i2* %dub_pix_keep_V_addr, align 2

ST_10: tmp_keep_V_1 [1/1] 0.00ns
.preheader.preheader:7  %tmp_keep_V_1 = zext i2 %dub_pix_keep_V_load to i4

ST_10: dub_pix_strb_V_load [1/2] 2.39ns
.preheader.preheader:8  %dub_pix_strb_V_load = load i2* %dub_pix_strb_V_addr, align 1

ST_10: tmp_strb_V_1 [1/1] 0.00ns
.preheader.preheader:9  %tmp_strb_V_1 = zext i2 %dub_pix_strb_V_load to i4

ST_10: tmp_user_V_1 [1/2] 2.39ns
.preheader.preheader:10  %tmp_user_V_1 = load i2* %dub_pix_user_V_addr, align 4

ST_10: tmp_last_V_1 [1/2] 2.39ns
.preheader.preheader:11  %tmp_last_V_1 = load i1* %dub_pix_last_V_addr, align 1

ST_10: tmp_id_V_1 [1/2] 2.39ns
.preheader.preheader:12  %tmp_id_V_1 = load i5* %dub_pix_id_V_addr, align 2

ST_10: tmp_dest_V_1 [1/2] 2.39ns
.preheader.preheader:13  %tmp_dest_V_1 = load i6* %dub_pix_dest_V_addr, align 1

ST_10: stg_130 [1/1] 1.57ns
.preheader.preheader:14  br label %.preheader


 <State 11>: 3.28ns
ST_11: l [1/1] 0.00ns
.preheader:0  %l = phi i5 [ %l_1, %_ifconv ], [ 0, %.preheader.preheader ]

ST_11: exitcond [1/1] 1.91ns
.preheader:1  %exitcond = icmp eq i5 %l, -16

ST_11: l_1 [1/1] 1.72ns
.preheader:2  %l_1 = add i5 %l, 1

ST_11: stg_134 [1/1] 0.00ns
.preheader:3  br i1 %exitcond, label %2, label %_ifconv

ST_11: tmp_11 [1/1] 0.00ns
_ifconv:0  %tmp_11 = trunc i5 %l to i1

ST_11: p_lshr_f_cast [1/1] 0.00ns
_ifconv:5  %p_lshr_f_cast = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %l, i32 1, i32 3)

ST_11: tmp_10 [1/1] 0.00ns
_ifconv:6  %tmp_10 = zext i3 %p_lshr_f_cast to i64

ST_11: sum_pix2_addr_2 [1/1] 0.00ns
_ifconv:7  %sum_pix2_addr_2 = getelementptr inbounds [8 x i32]* %sum_pix2, i64 0, i64 %tmp_10

ST_11: sum_pix2_load_1 [2/2] 2.39ns
_ifconv:8  %sum_pix2_load_1 = load i32* %sum_pix2_addr_2, align 4

ST_11: sum_pix1_addr_2 [1/1] 0.00ns
_ifconv:9  %sum_pix1_addr_2 = getelementptr inbounds [8 x i32]* %sum_pix1, i64 0, i64 %tmp_10

ST_11: sum_pix1_load_1 [2/2] 2.39ns
_ifconv:10  %sum_pix1_load_1 = load i32* %sum_pix1_addr_2, align 4


 <State 12>: 3.76ns
ST_12: empty_10 [1/1] 0.00ns
_ifconv:1  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_12: stg_143 [1/1] 0.00ns
_ifconv:2  call void (...)* @_ssdm_op_SpecLoopName([20 x i8]* @p_str6) nounwind

ST_12: tmp_7 [1/1] 0.00ns
_ifconv:3  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([20 x i8]* @p_str6)

ST_12: stg_145 [1/1] 0.00ns
_ifconv:4  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_12: sum_pix2_load_1 [1/2] 2.39ns
_ifconv:8  %sum_pix2_load_1 = load i32* %sum_pix2_addr_2, align 4

ST_12: sum_pix1_load_1 [1/2] 2.39ns
_ifconv:10  %sum_pix1_load_1 = load i32* %sum_pix1_addr_2, align 4

ST_12: tmp_data_V_1 [1/1] 1.37ns
_ifconv:11  %tmp_data_V_1 = select i1 %tmp_11, i32 %sum_pix1_load_1, i32 %sum_pix2_load_1

ST_12: stg_149 [1/1] 0.00ns
_ifconv:12  call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %outStream_V_data_V, i4* %outStream_V_keep_V, i4* %outStream_V_strb_V, i2* %outStream_V_user_V, i1* %outStream_V_last_V, i5* %outStream_V_id_V, i6* %outStream_V_dest_V, i32 %tmp_data_V_1, i4 %tmp_keep_V_1, i4 %tmp_strb_V_1, i2 %tmp_user_V_1, i1 %tmp_last_V_1, i5 %tmp_id_V_1, i6 %tmp_dest_V_1)

ST_12: empty_11 [1/1] 0.00ns
_ifconv:13  %empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([20 x i8]* @p_str6, i32 %tmp_7)

ST_12: stg_151 [1/1] 0.00ns
_ifconv:14  br label %.preheader


 <State 13>: 0.00ns
ST_13: stg_152 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
