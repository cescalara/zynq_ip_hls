// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _scurve_adder_HH_
#define _scurve_adder_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "scurve_adder_sum_pix1.h"
#include "scurve_adder_dub_pix_keep_V.h"
#include "scurve_adder_dub_pix_last_V.h"
#include "scurve_adder_dub_pix_id_V.h"
#include "scurve_adder_dub_pix_dest_V.h"
#include "scurve_adder_CTRL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct scurve_adder : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<16> > inStream_TDATA;
    sc_in< sc_logic > inStream_TVALID;
    sc_out< sc_logic > inStream_TREADY;
    sc_in< sc_lv<2> > inStream_TKEEP;
    sc_in< sc_lv<2> > inStream_TSTRB;
    sc_in< sc_lv<2> > inStream_TUSER;
    sc_in< sc_lv<1> > inStream_TLAST;
    sc_in< sc_lv<5> > inStream_TID;
    sc_in< sc_lv<6> > inStream_TDEST;
    sc_out< sc_lv<32> > outStream_TDATA;
    sc_out< sc_logic > outStream_TVALID;
    sc_in< sc_logic > outStream_TREADY;
    sc_out< sc_lv<4> > outStream_TKEEP;
    sc_out< sc_lv<4> > outStream_TSTRB;
    sc_out< sc_lv<2> > outStream_TUSER;
    sc_out< sc_lv<1> > outStream_TLAST;
    sc_out< sc_lv<5> > outStream_TID;
    sc_out< sc_lv<6> > outStream_TDEST;
    sc_in< sc_logic > s_axi_CTRL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_CTRL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    scurve_adder(sc_module_name name);
    SC_HAS_PROCESS(scurve_adder);

    ~scurve_adder();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    scurve_adder_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* scurve_adder_CTRL_BUS_s_axi_U;
    scurve_adder_sum_pix1* sum_pix1_U;
    scurve_adder_sum_pix1* sum_pix2_U;
    scurve_adder_dub_pix_keep_V* dub_pix_keep_V_U;
    scurve_adder_dub_pix_keep_V* dub_pix_strb_V_U;
    scurve_adder_dub_pix_keep_V* dub_pix_user_V_U;
    scurve_adder_dub_pix_last_V* dub_pix_last_V_U;
    scurve_adder_dub_pix_id_V* dub_pix_id_V_U;
    scurve_adder_dub_pix_dest_V* dub_pix_dest_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_25;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > param;
    sc_signal< sc_logic > inStream_TDATA_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg0_fsm_3;
    sc_signal< bool > ap_sig_57;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it4;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_436_p2;
    sc_signal< sc_logic > outStream_TDATA_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp2_stg0_fsm_6;
    sc_signal< bool > ap_sig_80;
    sc_signal< sc_logic > ap_reg_ppiten_pp2_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp2_it0;
    sc_signal< sc_lv<1> > exitcond_reg_753;
    sc_signal< sc_lv<35> > indvar_flatten_reg_378;
    sc_signal< sc_lv<4> > k_reg_389;
    sc_signal< sc_lv<5> > l_reg_400;
    sc_signal< sc_lv<32> > param_read_reg_584;
    sc_signal< sc_lv<4> > i_1_fu_417_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_144;
    sc_signal< sc_lv<35> > tmp_2_fu_429_p3;
    sc_signal< sc_lv<35> > tmp_2_reg_597;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_153;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_602;
    sc_signal< bool > ap_sig_158;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_602_pp1_iter1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_602_pp1_iter2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_602_pp1_iter3;
    sc_signal< sc_lv<35> > indvar_flatten_next_fu_441_p2;
    sc_signal< sc_lv<4> > k_mid2_fu_453_p3;
    sc_signal< sc_lv<4> > k_mid2_reg_611;
    sc_signal< sc_lv<2> > tmp_keep_V_reg_616;
    sc_signal< sc_lv<2> > tmp_strb_V_reg_621;
    sc_signal< sc_lv<2> > tmp_user_V_reg_626;
    sc_signal< sc_lv<1> > tmp_last_V_reg_631;
    sc_signal< sc_lv<5> > tmp_id_V_reg_636;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_641;
    sc_signal< sc_lv<8> > tmp_6_fu_489_p1;
    sc_signal< sc_lv<8> > tmp_6_reg_646;
    sc_signal< sc_lv<8> > ap_reg_ppstg_tmp_6_reg_646_pp1_iter1;
    sc_signal< sc_lv<8> > ap_reg_ppstg_tmp_6_reg_646_pp1_iter2;
    sc_signal< sc_lv<8> > phitmp_reg_651;
    sc_signal< sc_lv<8> > ap_reg_ppstg_phitmp_reg_651_pp1_iter1;
    sc_signal< sc_lv<8> > ap_reg_ppstg_phitmp_reg_651_pp1_iter2;
    sc_signal< sc_lv<4> > k_1_fu_503_p2;
    sc_signal< sc_lv<3> > sum_pix1_addr_1_reg_661;
    sc_signal< sc_lv<3> > ap_reg_ppstg_sum_pix1_addr_1_reg_661_pp1_iter2;
    sc_signal< sc_lv<3> > ap_reg_ppstg_sum_pix1_addr_1_reg_661_pp1_iter3;
    sc_signal< sc_lv<3> > sum_pix2_addr_1_reg_667;
    sc_signal< sc_lv<3> > ap_reg_ppstg_sum_pix2_addr_1_reg_667_pp1_iter2;
    sc_signal< sc_lv<3> > ap_reg_ppstg_sum_pix2_addr_1_reg_667_pp1_iter3;
    sc_signal< sc_lv<32> > sum_pix1_q0;
    sc_signal< sc_lv<32> > sum_pix1_load_reg_673;
    sc_signal< sc_lv<32> > sum_pix2_q0;
    sc_signal< sc_lv<32> > sum_pix2_load_reg_678;
    sc_signal< sc_lv<32> > tmp_9_fu_523_p2;
    sc_signal< sc_lv<32> > tmp_9_reg_683;
    sc_signal< sc_lv<32> > tmp_1_fu_531_p2;
    sc_signal< sc_lv<32> > tmp_1_reg_688;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_4;
    sc_signal< bool > ap_sig_229;
    sc_signal< sc_lv<4> > tmp_keep_V_1_fu_536_p1;
    sc_signal< sc_lv<4> > tmp_keep_V_1_reg_723;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_5;
    sc_signal< bool > ap_sig_248;
    sc_signal< sc_lv<4> > tmp_strb_V_1_fu_540_p1;
    sc_signal< sc_lv<4> > tmp_strb_V_1_reg_728;
    sc_signal< sc_lv<2> > dub_pix_user_V_q0;
    sc_signal< sc_lv<2> > tmp_user_V_1_reg_733;
    sc_signal< sc_lv<1> > dub_pix_last_V_q0;
    sc_signal< sc_lv<1> > tmp_last_V_1_reg_738;
    sc_signal< sc_lv<5> > dub_pix_id_V_q0;
    sc_signal< sc_lv<5> > tmp_id_V_1_reg_743;
    sc_signal< sc_lv<6> > dub_pix_dest_V_q0;
    sc_signal< sc_lv<6> > tmp_dest_V_1_reg_748;
    sc_signal< sc_lv<1> > exitcond_fu_544_p2;
    sc_signal< sc_logic > ap_sig_ioackin_outStream_TREADY;
    sc_signal< sc_lv<5> > l_1_fu_550_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_556_p1;
    sc_signal< sc_lv<1> > tmp_11_reg_762;
    sc_signal< sc_lv<3> > sum_pix1_address0;
    sc_signal< sc_logic > sum_pix1_ce0;
    sc_signal< sc_logic > sum_pix1_we0;
    sc_signal< sc_lv<3> > sum_pix1_address1;
    sc_signal< sc_logic > sum_pix1_ce1;
    sc_signal< sc_logic > sum_pix1_we1;
    sc_signal< sc_lv<32> > sum_pix1_q1;
    sc_signal< sc_lv<3> > sum_pix2_address0;
    sc_signal< sc_logic > sum_pix2_ce0;
    sc_signal< sc_logic > sum_pix2_we0;
    sc_signal< sc_lv<3> > sum_pix2_address1;
    sc_signal< sc_logic > sum_pix2_ce1;
    sc_signal< sc_logic > sum_pix2_we1;
    sc_signal< sc_lv<32> > sum_pix2_q1;
    sc_signal< sc_lv<3> > dub_pix_keep_V_address0;
    sc_signal< sc_logic > dub_pix_keep_V_ce0;
    sc_signal< sc_logic > dub_pix_keep_V_we0;
    sc_signal< sc_lv<2> > dub_pix_keep_V_q0;
    sc_signal< sc_lv<3> > dub_pix_strb_V_address0;
    sc_signal< sc_logic > dub_pix_strb_V_ce0;
    sc_signal< sc_logic > dub_pix_strb_V_we0;
    sc_signal< sc_lv<2> > dub_pix_strb_V_q0;
    sc_signal< sc_lv<3> > dub_pix_user_V_address0;
    sc_signal< sc_logic > dub_pix_user_V_ce0;
    sc_signal< sc_logic > dub_pix_user_V_we0;
    sc_signal< sc_lv<3> > dub_pix_last_V_address0;
    sc_signal< sc_logic > dub_pix_last_V_ce0;
    sc_signal< sc_logic > dub_pix_last_V_we0;
    sc_signal< sc_lv<3> > dub_pix_id_V_address0;
    sc_signal< sc_logic > dub_pix_id_V_ce0;
    sc_signal< sc_logic > dub_pix_id_V_we0;
    sc_signal< sc_lv<3> > dub_pix_dest_V_address0;
    sc_signal< sc_logic > dub_pix_dest_V_ce0;
    sc_signal< sc_logic > dub_pix_dest_V_we0;
    sc_signal< sc_lv<4> > i_reg_367;
    sc_signal< sc_lv<1> > exitcond1_fu_411_p2;
    sc_signal< sc_lv<64> > tmp_fu_423_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_509_p1;
    sc_signal< sc_lv<64> > tmp_10_fu_570_p1;
    sc_signal< sc_logic > ap_reg_ioackin_outStream_TREADY;
    sc_signal< sc_lv<1> > exitcond2_fu_447_p2;
    sc_signal< sc_lv<32> > tmp_8_fu_520_p1;
    sc_signal< sc_lv<32> > tmp_s_fu_528_p1;
    sc_signal< sc_lv<3> > p_lshr_f_cast_fu_560_p4;
    sc_signal< sc_logic > ap_sig_cseq_ST_st13_fsm_7;
    sc_signal< bool > ap_sig_566;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_st1_fsm_0;
    static const sc_lv<8> ap_ST_st2_fsm_1;
    static const sc_lv<8> ap_ST_st3_fsm_2;
    static const sc_lv<8> ap_ST_pp1_stg0_fsm_3;
    static const sc_lv<8> ap_ST_st9_fsm_4;
    static const sc_lv<8> ap_ST_st10_fsm_5;
    static const sc_lv<8> ap_ST_pp2_stg0_fsm_6;
    static const sc_lv<8> ap_ST_st13_fsm_7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<35> ap_const_lv35_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<35> ap_const_lv35_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_7;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_144();
    void thread_ap_sig_153();
    void thread_ap_sig_158();
    void thread_ap_sig_229();
    void thread_ap_sig_248();
    void thread_ap_sig_25();
    void thread_ap_sig_566();
    void thread_ap_sig_57();
    void thread_ap_sig_80();
    void thread_ap_sig_cseq_ST_pp1_stg0_fsm_3();
    void thread_ap_sig_cseq_ST_pp2_stg0_fsm_6();
    void thread_ap_sig_cseq_ST_st10_fsm_5();
    void thread_ap_sig_cseq_ST_st13_fsm_7();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st9_fsm_4();
    void thread_ap_sig_ioackin_outStream_TREADY();
    void thread_dub_pix_dest_V_address0();
    void thread_dub_pix_dest_V_ce0();
    void thread_dub_pix_dest_V_we0();
    void thread_dub_pix_id_V_address0();
    void thread_dub_pix_id_V_ce0();
    void thread_dub_pix_id_V_we0();
    void thread_dub_pix_keep_V_address0();
    void thread_dub_pix_keep_V_ce0();
    void thread_dub_pix_keep_V_we0();
    void thread_dub_pix_last_V_address0();
    void thread_dub_pix_last_V_ce0();
    void thread_dub_pix_last_V_we0();
    void thread_dub_pix_strb_V_address0();
    void thread_dub_pix_strb_V_ce0();
    void thread_dub_pix_strb_V_we0();
    void thread_dub_pix_user_V_address0();
    void thread_dub_pix_user_V_ce0();
    void thread_dub_pix_user_V_we0();
    void thread_exitcond1_fu_411_p2();
    void thread_exitcond2_fu_447_p2();
    void thread_exitcond_flatten_fu_436_p2();
    void thread_exitcond_fu_544_p2();
    void thread_i_1_fu_417_p2();
    void thread_inStream_TDATA_blk_n();
    void thread_inStream_TREADY();
    void thread_indvar_flatten_next_fu_441_p2();
    void thread_k_1_fu_503_p2();
    void thread_k_mid2_fu_453_p3();
    void thread_l_1_fu_550_p2();
    void thread_outStream_TDATA();
    void thread_outStream_TDATA_blk_n();
    void thread_outStream_TDEST();
    void thread_outStream_TID();
    void thread_outStream_TKEEP();
    void thread_outStream_TLAST();
    void thread_outStream_TSTRB();
    void thread_outStream_TUSER();
    void thread_outStream_TVALID();
    void thread_p_lshr_f_cast_fu_560_p4();
    void thread_sum_pix1_address0();
    void thread_sum_pix1_address1();
    void thread_sum_pix1_ce0();
    void thread_sum_pix1_ce1();
    void thread_sum_pix1_we0();
    void thread_sum_pix1_we1();
    void thread_sum_pix2_address0();
    void thread_sum_pix2_address1();
    void thread_sum_pix2_ce0();
    void thread_sum_pix2_ce1();
    void thread_sum_pix2_we0();
    void thread_sum_pix2_we1();
    void thread_tmp_10_fu_570_p1();
    void thread_tmp_11_fu_556_p1();
    void thread_tmp_1_fu_531_p2();
    void thread_tmp_2_fu_429_p3();
    void thread_tmp_4_fu_509_p1();
    void thread_tmp_6_fu_489_p1();
    void thread_tmp_8_fu_520_p1();
    void thread_tmp_9_fu_523_p2();
    void thread_tmp_fu_423_p1();
    void thread_tmp_keep_V_1_fu_536_p1();
    void thread_tmp_s_fu_528_p1();
    void thread_tmp_strb_V_1_fu_540_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
