// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="l2_trigger,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z030ffg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.417000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=58,HLS_SYN_DSP=28,HLS_SYN_FF=7038,HLS_SYN_LUT=11465}" *)

module l2_trigger (
        ap_clk,
        ap_rst_n,
        in_stream_TDATA,
        in_stream_TVALID,
        in_stream_TREADY,
        in_stream_TKEEP,
        in_stream_TSTRB,
        in_stream_TUSER,
        in_stream_TLAST,
        in_stream_TID,
        in_stream_TDEST,
        out_stream_TDATA,
        out_stream_TVALID,
        out_stream_TREADY,
        out_stream_TKEEP,
        out_stream_TSTRB,
        out_stream_TUSER,
        out_stream_TLAST,
        out_stream_TID,
        out_stream_TDEST,
        trig_data,
        trig_data_ap_vld,
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 62'b1;
parameter    ap_ST_st2_fsm_1 = 62'b10;
parameter    ap_ST_st3_fsm_2 = 62'b100;
parameter    ap_ST_st4_fsm_3 = 62'b1000;
parameter    ap_ST_st5_fsm_4 = 62'b10000;
parameter    ap_ST_st6_fsm_5 = 62'b100000;
parameter    ap_ST_st7_fsm_6 = 62'b1000000;
parameter    ap_ST_st8_fsm_7 = 62'b10000000;
parameter    ap_ST_st9_fsm_8 = 62'b100000000;
parameter    ap_ST_st10_fsm_9 = 62'b1000000000;
parameter    ap_ST_st11_fsm_10 = 62'b10000000000;
parameter    ap_ST_st12_fsm_11 = 62'b100000000000;
parameter    ap_ST_st13_fsm_12 = 62'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 62'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 62'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 62'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 62'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 62'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 62'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 62'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 62'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 62'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 62'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 62'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 62'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 62'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 62'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 62'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 62'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 62'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 62'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 62'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 62'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 62'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 62'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 62'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 62'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 62'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 62'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 62'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 62'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 62'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 62'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 62'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 62'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 62'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 62'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 62'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 62'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 62'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 62'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 62'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 62'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 62'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 62'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 62'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 62'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 62'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 62'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 62'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 62'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 62'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_639C = 32'b110001110011100;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv64_4018000000000000 = 64'b100000000011000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv15_1 = 15'b1;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv16_FFFF = 16'b1111111111111111;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv12_C01 = 12'b110000000001;
parameter    ap_const_lv11_3FF = 11'b1111111111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (C_S_AXI_CTRL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_stream_TDATA;
input   in_stream_TVALID;
output   in_stream_TREADY;
input  [3:0] in_stream_TKEEP;
input  [3:0] in_stream_TSTRB;
input  [1:0] in_stream_TUSER;
input  [0:0] in_stream_TLAST;
input  [4:0] in_stream_TID;
input  [5:0] in_stream_TDEST;
output  [63:0] out_stream_TDATA;
output   out_stream_TVALID;
input   out_stream_TREADY;
output  [7:0] out_stream_TKEEP;
output  [7:0] out_stream_TSTRB;
output  [1:0] out_stream_TUSER;
output  [0:0] out_stream_TLAST;
output  [4:0] out_stream_TID;
output  [5:0] out_stream_TDEST;
output  [31:0] trig_data;
output   trig_data_ap_vld;
input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1 : 0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1 : 0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;
output   interrupt;

reg in_stream_TREADY;
reg out_stream_TVALID;
reg[31:0] trig_data;
reg trig_data_ap_vld;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [61:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_79;
reg    ap_ready;
wire   [15:0] n_pixels_in_bus;
reg    in_stream_TDATA_blk_n;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_113;
reg    out_stream_TDATA_blk_n;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_121;
reg   [15:0] n_pixels_in_bus_read_reg_1330;
wire   [14:0] tmp_1_fu_666_p4;
reg   [14:0] tmp_1_reg_1335;
wire   [15:0] tmp_6_fu_676_p1;
reg   [15:0] tmp_6_reg_1343;
wire   [14:0] i_5_fu_685_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_175;
wire   [3:0] kk_2_fu_705_p2;
reg   [3:0] kk_2_reg_1359;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_184;
wire   [14:0] tmp_7_fu_735_p2;
reg   [14:0] tmp_7_reg_1364;
wire   [0:0] exitcond1_fu_699_p2;
wire   [15:0] tmp_5_fu_741_p2;
reg   [15:0] tmp_5_reg_1369;
wire   [14:0] i_6_fu_751_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_203;
wire   [15:0] i_7_fu_773_p2;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_212;
wire   [7:0] k_1_fu_791_p2;
reg   [7:0] k_1_reg_1396;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_221;
wire   [14:0] i_9_fu_802_p2;
reg   [14:0] i_9_reg_1404;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_230;
wire   [63:0] tmp_18_fu_808_p1;
reg   [63:0] tmp_18_reg_1411;
wire   [0:0] exitcond7_fu_797_p2;
reg   [10:0] sum_pix1_addr_3_reg_1421;
reg   [10:0] sum_pix2_addr_3_reg_1426;
reg   [13:0] data_shift1_addr_1_reg_1431;
reg   [13:0] data_shift2_addr_1_reg_1436;
wire   [15:0] tmp_39_fu_818_p1;
reg   [15:0] tmp_39_reg_1441;
wire   [15:0] phitmp_fu_822_p4;
reg   [15:0] phitmp_reg_1446;
wire  signed [31:0] tmp_24_fu_832_p1;
reg  signed [31:0] tmp_24_reg_1451;
wire  signed [31:0] tmp_26_fu_843_p1;
reg  signed [31:0] tmp_26_reg_1456;
reg   [10:0] sum_overP1_addr_reg_1461;
reg   [10:0] sum_overP2_addr_reg_1466;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_267;
wire   [0:0] tmp_40_fu_854_p3;
wire   [14:0] tmp_48_fu_940_p2;
reg   [14:0] tmp_48_reg_1484;
wire   [3:0] kk_3_fu_946_p2;
reg   [3:0] kk_3_reg_1489;
wire   [31:0] tmp_35_fu_993_p2;
reg   [31:0] tmp_35_reg_1499;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_289;
wire   [0:0] tmp_36_fu_999_p2;
reg   [0:0] tmp_36_reg_1504;
wire   [0:0] grp_fu_660_p2;
reg   [0:0] tmp_38_reg_1513;
reg   [0:0] p_old_reg_1518;
wire   [14:0] i_8_fu_1024_p2;
reg   [14:0] i_8_reg_1528;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_309;
wire   [63:0] tmp_9_fu_1030_p1;
reg   [63:0] tmp_9_reg_1533;
wire   [0:0] exitcond6_fu_1019_p2;
wire   [0:0] l3_data_last_V_fu_1036_p2;
reg   [0:0] l3_data_last_V_reg_1549;
reg   [24:0] tmp_10_reg_1554;
reg    ap_sig_ioackin_out_stream_TREADY;
reg   [24:0] tmp_11_reg_1559;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_337;
wire   [63:0] grp_fu_644_p1;
reg   [63:0] tmp_13_reg_1574;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_348;
wire   [63:0] grp_fu_647_p1;
reg   [63:0] tmp_19_reg_1580;
wire   [63:0] grp_fu_650_p2;
reg   [63:0] tmp_14_reg_1586;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_359;
wire   [63:0] grp_fu_655_p2;
reg   [63:0] tmp_20_reg_1591;
wire   [63:0] grp_fu_634_p2;
reg   [63:0] tmp_15_reg_1596;
reg    ap_sig_cseq_ST_st56_fsm_55;
reg    ap_sig_370;
wire   [63:0] grp_fu_639_p2;
reg   [63:0] tmp_21_reg_1601;
reg   [10:0] loc_V_reg_1606;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_381;
wire   [51:0] loc_V_1_fu_1108_p1;
reg   [51:0] loc_V_1_reg_1612;
reg   [10:0] loc_V_2_reg_1617;
wire   [51:0] loc_V_3_fu_1126_p1;
reg   [51:0] loc_V_3_reg_1623;
reg   [10:0] sum_overP1_address0;
reg    sum_overP1_ce0;
reg    sum_overP1_we0;
reg   [31:0] sum_overP1_d0;
wire   [31:0] sum_overP1_q0;
reg   [10:0] sum_overP2_address0;
reg    sum_overP2_ce0;
reg    sum_overP2_we0;
reg   [31:0] sum_overP2_d0;
wire   [31:0] sum_overP2_q0;
reg   [10:0] sum_pix1_address0;
reg    sum_pix1_ce0;
reg    sum_pix1_we0;
reg   [31:0] sum_pix1_d0;
wire   [31:0] sum_pix1_q0;
reg   [13:0] data_shift1_address0;
reg    data_shift1_ce0;
reg    data_shift1_we0;
reg   [16:0] data_shift1_d0;
wire   [16:0] data_shift1_q0;
reg   [10:0] thresh1_address0;
reg    thresh1_ce0;
reg    thresh1_we0;
reg   [31:0] thresh1_d0;
wire   [31:0] thresh1_q0;
reg   [10:0] sum_pix2_address0;
reg    sum_pix2_ce0;
reg    sum_pix2_we0;
reg   [31:0] sum_pix2_d0;
wire   [31:0] sum_pix2_q0;
reg   [13:0] data_shift2_address0;
reg    data_shift2_ce0;
reg    data_shift2_we0;
reg   [16:0] data_shift2_d0;
wire   [16:0] data_shift2_q0;
reg   [10:0] thresh2_address0;
reg    thresh2_ce0;
reg    thresh2_we0;
reg   [31:0] thresh2_d0;
wire   [31:0] thresh2_q0;
reg   [14:0] i_reg_501;
wire   [0:0] exitcond9_fu_680_p2;
reg   [3:0] kk_reg_512;
wire   [0:0] exitcond8_fu_746_p2;
reg   [14:0] i_1_reg_523;
reg   [15:0] i_2_reg_534;
wire   [0:0] exitcond2_fu_768_p2;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_492;
wire   [0:0] tmp_nbreadreq_fu_224_p9;
reg   [7:0] k_reg_545;
reg   [31:0] itrig_reg_556;
reg   [14:0] i_3_reg_568;
wire   [0:0] exitcond_fu_785_p2;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_518;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_529;
wire   [0:0] or_cond_fu_1010_p2;
reg   [31:0] itrig_1_reg_584;
reg   [3:0] kk_1_reg_604;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_547;
reg   [14:0] i_4_reg_615;
reg    ap_sig_cseq_ST_st62_fsm_61;
reg    ap_sig_556;
wire   [63:0] tmp_3_fu_691_p1;
wire   [63:0] tmp_17_cast_fu_762_p1;
wire   [63:0] tmp_s_fu_779_p1;
wire   [63:0] tmp_50_cast_fu_898_p1;
wire   [63:0] tmp_54_cast_fu_964_p1;
reg    ap_reg_ioackin_out_stream_TREADY;
wire   [31:0] tmp_25_fu_836_p2;
wire   [31:0] tmp_27_fu_847_p2;
wire   [31:0] result_V_fu_1221_p3;
wire   [31:0] result_V_1_fu_1321_p3;
wire  signed [16:0] tmp_24_cast_fu_952_p1;
wire  signed [16:0] tmp_26_cast_fu_956_p1;
wire   [31:0] tmp_32_fu_973_p2;
wire   [31:0] tmp_34_fu_987_p2;
wire   [31:0] tmp_33_fu_980_p2;
reg    ap_sig_cseq_ST_st57_fsm_56;
reg    ap_sig_655;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_667;
wire   [31:0] grp_fu_644_p0;
wire   [31:0] grp_fu_647_p0;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_679;
wire   [13:0] tmp_2_fu_711_p3;
wire   [10:0] tmp_4_fu_723_p3;
wire   [14:0] p_shl1_cast_fu_731_p1;
wire   [14:0] p_shl_cast_fu_719_p1;
wire   [14:0] tmp_8_fu_757_p2;
wire   [13:0] tmp_41_fu_862_p3;
wire   [10:0] tmp_42_fu_874_p3;
wire  signed [14:0] p_shl5_cast_fu_882_p1;
wire  signed [14:0] p_shl4_cast_fu_870_p1;
wire   [14:0] tmp_43_fu_886_p2;
wire   [14:0] tmp_44_fu_892_p2;
wire   [3:0] tmp_30_fu_904_p2;
wire   [13:0] tmp_45_fu_910_p3;
wire   [10:0] tmp_46_fu_922_p3;
wire   [14:0] p_shl3_cast_fu_930_p1;
wire   [14:0] p_shl2_cast_fu_918_p1;
wire   [14:0] tmp_47_fu_934_p2;
wire  signed [31:0] extLd_fu_960_p1;
wire  signed [31:0] extLd1_fu_969_p1;
wire   [0:0] tmp_37_fu_1005_p2;
wire   [15:0] i_4_cast_fu_1015_p1;
wire   [27:0] sum_pixP1_fu_1070_p3;
wire   [27:0] sum_pixP2_fu_1077_p3;
wire   [63:0] grp_fu_626_p2;
wire   [63:0] p_Val2_s_fu_1094_p1;
wire   [63:0] grp_fu_630_p2;
wire   [63:0] p_Val2_4_fu_1112_p1;
wire   [52:0] p_Result_s_fu_1130_p3;
wire   [11:0] tmp_i_i_i_cast2_fu_1141_p1;
wire   [11:0] sh_assign_fu_1144_p2;
wire   [10:0] tmp_i_i_19_fu_1158_p2;
wire   [0:0] isNeg_fu_1150_p3;
wire  signed [11:0] tmp_i_i_cast_fu_1163_p1;
wire   [11:0] sh_assign_1_fu_1167_p3;
wire  signed [31:0] sh_assign_1_cast_fu_1175_p1;
wire   [52:0] tmp_41_i_i_cast_fu_1183_p1;
wire   [135:0] tmp_i_i_fu_1137_p1;
wire   [135:0] tmp_41_i_i_fu_1179_p1;
wire   [52:0] tmp_42_i_i_fu_1187_p2;
wire   [0:0] tmp_22_fu_1199_p3;
wire   [135:0] tmp_44_i_i_fu_1193_p2;
wire   [31:0] tmp_16_fu_1207_p1;
wire   [31:0] tmp_17_fu_1211_p4;
wire   [52:0] p_Result_4_fu_1230_p3;
wire   [11:0] tmp_i_i_i6_cast1_fu_1241_p1;
wire   [11:0] sh_assign_2_fu_1244_p2;
wire   [10:0] tmp_i_i9_fu_1258_p2;
wire   [0:0] isNeg_1_fu_1250_p3;
wire  signed [11:0] tmp_i_i9_cast_fu_1263_p1;
wire   [11:0] sh_assign_3_fu_1267_p3;
wire  signed [31:0] sh_assign_3_cast_fu_1275_p1;
wire   [52:0] tmp_41_i_i1_cast_fu_1283_p1;
wire   [135:0] tmp_i_i5_fu_1237_p1;
wire   [135:0] tmp_41_i_i1_fu_1279_p1;
wire   [52:0] tmp_42_i_i1_fu_1287_p2;
wire   [0:0] tmp_31_fu_1299_p3;
wire   [135:0] tmp_44_i_i1_fu_1293_p2;
wire   [31:0] tmp_28_fu_1307_p1;
wire   [31:0] tmp_29_fu_1311_p4;
reg   [61:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 62'b1;
#0 ap_reg_ioackin_out_stream_TREADY = 1'b0;
end

l2_trigger_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
l2_trigger_CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .n_pixels_in_bus(n_pixels_in_bus)
);

l2_trigger_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
sum_overP1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sum_overP1_address0),
    .ce0(sum_overP1_ce0),
    .we0(sum_overP1_we0),
    .d0(sum_overP1_d0),
    .q0(sum_overP1_q0)
);

l2_trigger_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
sum_overP2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sum_overP2_address0),
    .ce0(sum_overP2_ce0),
    .we0(sum_overP2_we0),
    .d0(sum_overP2_d0),
    .q0(sum_overP2_q0)
);

l2_trigger_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
sum_pix1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sum_pix1_address0),
    .ce0(sum_pix1_ce0),
    .we0(sum_pix1_we0),
    .d0(sum_pix1_d0),
    .q0(sum_pix1_q0)
);

l2_trigger_data_shift1 #(
    .DataWidth( 17 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
data_shift1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_shift1_address0),
    .ce0(data_shift1_ce0),
    .we0(data_shift1_we0),
    .d0(data_shift1_d0),
    .q0(data_shift1_q0)
);

l2_trigger_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
thresh1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(thresh1_address0),
    .ce0(thresh1_ce0),
    .we0(thresh1_we0),
    .d0(thresh1_d0),
    .q0(thresh1_q0)
);

l2_trigger_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
sum_pix2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sum_pix2_address0),
    .ce0(sum_pix2_ce0),
    .we0(sum_pix2_we0),
    .d0(sum_pix2_d0),
    .q0(sum_pix2_q0)
);

l2_trigger_data_shift1 #(
    .DataWidth( 17 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
data_shift2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_shift2_address0),
    .ce0(data_shift2_ce0),
    .we0(data_shift2_we0),
    .d0(data_shift2_d0),
    .q0(data_shift2_q0)
);

l2_trigger_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
thresh2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(thresh2_address0),
    .ce0(thresh2_ce0),
    .we0(thresh2_we0),
    .d0(thresh2_d0),
    .q0(thresh2_q0)
);

l2_trigger_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
l2_trigger_dadd_64ns_64ns_64_5_full_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_13_reg_1574),
    .din1(tmp_15_reg_1596),
    .ce(1'b1),
    .dout(grp_fu_626_p2)
);

l2_trigger_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
l2_trigger_dadd_64ns_64ns_64_5_full_dsp_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_19_reg_1580),
    .din1(tmp_21_reg_1601),
    .ce(1'b1),
    .dout(grp_fu_630_p2)
);

l2_trigger_dmul_64ns_64ns_64_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
l2_trigger_dmul_64ns_64ns_64_5_max_dsp_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_14_reg_1586),
    .din1(ap_const_lv64_4018000000000000),
    .ce(1'b1),
    .dout(grp_fu_634_p2)
);

l2_trigger_dmul_64ns_64ns_64_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
l2_trigger_dmul_64ns_64ns_64_5_max_dsp_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_20_reg_1591),
    .din1(ap_const_lv64_4018000000000000),
    .ce(1'b1),
    .dout(grp_fu_639_p2)
);

l2_trigger_uitodp_32ns_64_5 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
l2_trigger_uitodp_32ns_64_5_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_644_p0),
    .ce(1'b1),
    .dout(grp_fu_644_p1)
);

l2_trigger_uitodp_32ns_64_5 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
l2_trigger_uitodp_32ns_64_5_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_647_p0),
    .ce(1'b1),
    .dout(grp_fu_647_p1)
);

l2_trigger_dsqrt_64ns_64ns_64_30 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
l2_trigger_dsqrt_64ns_64ns_64_30_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_const_lv64_0),
    .din1(tmp_13_reg_1574),
    .ce(1'b1),
    .dout(grp_fu_650_p2)
);

l2_trigger_dsqrt_64ns_64ns_64_30 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
l2_trigger_dsqrt_64ns_64ns_64_30_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_const_lv64_0),
    .din1(tmp_19_reg_1580),
    .ce(1'b1),
    .dout(grp_fu_655_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_out_stream_TREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & ~(1'b0 == ap_sig_ioackin_out_stream_TREADY))) begin
            ap_reg_ioackin_out_stream_TREADY <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & (1'b1 == out_stream_TREADY))) begin
            ap_reg_ioackin_out_stream_TREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond1_fu_699_p2 == 1'b0))) begin
        i_1_reg_523 <= ap_const_lv15_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_fu_746_p2))) begin
        i_1_reg_523 <= i_6_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == tmp_nbreadreq_fu_224_p9))) begin
        i_2_reg_534 <= ap_const_lv16_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond2_fu_768_p2))) begin
        i_2_reg_534 <= i_7_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) | ((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == tmp_36_fu_999_p2) & (1'b0 == grp_fu_660_p2)) | ((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == or_cond_fu_1010_p2) & (1'b0 == tmp_36_reg_1504)))) begin
        i_3_reg_568 <= i_9_reg_1404;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond_fu_785_p2))) begin
        i_3_reg_568 <= ap_const_lv15_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond_fu_785_p2))) begin
        i_4_reg_615 <= ap_const_lv15_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        i_4_reg_615 <= i_8_reg_1528;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_680_p2))) begin
        i_reg_501 <= i_5_fu_685_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_501 <= ap_const_lv15_0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == tmp_36_fu_999_p2) & (1'b0 == grp_fu_660_p2)) | ((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == or_cond_fu_1010_p2) & (1'b0 == tmp_36_reg_1504)))) begin
        itrig_1_reg_584 <= itrig_1_reg_584;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        itrig_1_reg_584 <= ap_const_lv32_1;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond_fu_785_p2))) begin
        itrig_1_reg_584 <= itrig_reg_556;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == exitcond7_fu_797_p2))) begin
        itrig_reg_556 <= itrig_1_reg_584;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond2_fu_768_p2))) begin
        itrig_reg_556 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == exitcond7_fu_797_p2))) begin
        k_reg_545 <= k_1_reg_1396;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond2_fu_768_p2))) begin
        k_reg_545 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        kk_1_reg_604 <= kk_3_reg_1489;
    end else if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(in_stream_TVALID == 1'b0))) begin
        kk_1_reg_604 <= ap_const_lv4_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond8_fu_746_p2))) begin
        kk_reg_512 <= kk_2_reg_1359;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond9_fu_680_p2))) begin
        kk_reg_512 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(in_stream_TVALID == 1'b0))) begin
        data_shift1_addr_1_reg_1431 <= tmp_18_reg_1411;
        data_shift2_addr_1_reg_1436 <= tmp_18_reg_1411;
        phitmp_reg_1446 <= {{in_stream_TDATA[ap_const_lv32_1F : ap_const_lv32_10]}};
        sum_overP1_addr_reg_1461 <= tmp_18_reg_1411;
        sum_overP2_addr_reg_1466 <= tmp_18_reg_1411;
        tmp_24_reg_1451 <= tmp_24_fu_832_p1;
        tmp_26_reg_1456 <= tmp_26_fu_843_p1;
        tmp_39_reg_1441 <= tmp_39_fu_818_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        i_8_reg_1528 <= i_8_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        i_9_reg_1404 <= i_9_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        k_1_reg_1396 <= k_1_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        kk_2_reg_1359 <= kk_2_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == tmp_40_fu_854_p3))) begin
        kk_3_reg_1489 <= kk_3_fu_946_p2;
        tmp_48_reg_1484 <= tmp_48_fu_940_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == exitcond6_fu_1019_p2))) begin
        l3_data_last_V_reg_1549 <= l3_data_last_V_fu_1036_p2;
        tmp_9_reg_1533[14 : 0] <= tmp_9_fu_1030_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        loc_V_1_reg_1612 <= loc_V_1_fu_1108_p1;
        loc_V_2_reg_1617 <= {{p_Val2_4_fu_1112_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
        loc_V_3_reg_1623 <= loc_V_3_fu_1126_p1;
        loc_V_reg_1606 <= {{p_Val2_s_fu_1094_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        n_pixels_in_bus_read_reg_1330 <= n_pixels_in_bus;
        tmp_1_reg_1335 <= {{n_pixels_in_bus[ap_const_lv32_F : ap_const_lv32_1]}};
        tmp_6_reg_1343[14 : 0] <= tmp_6_fu_676_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == tmp_36_fu_999_p2))) begin
        p_old_reg_1518 <= grp_fu_660_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & (1'b0 == exitcond7_fu_797_p2))) begin
        sum_pix1_addr_3_reg_1421 <= tmp_18_fu_808_p1;
        sum_pix2_addr_3_reg_1426 <= tmp_18_fu_808_p1;
        tmp_18_reg_1411[14 : 0] <= tmp_18_fu_808_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & ~(1'b0 == ap_sig_ioackin_out_stream_TREADY))) begin
        tmp_10_reg_1554 <= {{sum_pix1_q0[ap_const_lv32_1F : ap_const_lv32_7]}};
        tmp_11_reg_1559 <= {{sum_pix2_q0[ap_const_lv32_1F : ap_const_lv32_7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        tmp_13_reg_1574 <= grp_fu_644_p1;
        tmp_19_reg_1580 <= grp_fu_647_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        tmp_14_reg_1586 <= grp_fu_650_p2;
        tmp_20_reg_1591 <= grp_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        tmp_15_reg_1596 <= grp_fu_634_p2;
        tmp_21_reg_1601 <= grp_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        tmp_35_reg_1499 <= tmp_35_fu_993_p2;
        tmp_36_reg_1504 <= tmp_36_fu_999_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == tmp_36_fu_999_p2))) begin
        tmp_38_reg_1513 <= grp_fu_660_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(exitcond1_fu_699_p2 == 1'b0))) begin
        tmp_5_reg_1369 <= tmp_5_fu_741_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond1_fu_699_p2 == 1'b0))) begin
        tmp_7_reg_1364[14 : 7] <= tmp_7_fu_735_p2[14 : 7];
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == tmp_nbreadreq_fu_224_p9))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == tmp_nbreadreq_fu_224_p9))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_267) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_547) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_289) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_529) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_518) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_309) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_121) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_337) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_79) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_348) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_679) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_175) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_184) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_203) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_359) begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_667) begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_370) begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_655) begin
        ap_sig_cseq_ST_st57_fsm_56 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_56 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_492) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_381) begin
        ap_sig_cseq_ST_st61_fsm_60 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_556) begin
        ap_sig_cseq_ST_st62_fsm_61 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st62_fsm_61 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_212) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_221) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_230) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_113) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_out_stream_TREADY)) begin
        ap_sig_ioackin_out_stream_TREADY = out_stream_TREADY;
    end else begin
        ap_sig_ioackin_out_stream_TREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        data_shift1_address0 = tmp_54_cast_fu_964_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3))) begin
        data_shift1_address0 = data_shift1_addr_1_reg_1431;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        data_shift1_address0 = tmp_17_cast_fu_762_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == tmp_40_fu_854_p3))) begin
        data_shift1_address0 = tmp_50_cast_fu_898_p1;
    end else begin
        data_shift1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == tmp_40_fu_854_p3)) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3)) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        data_shift1_ce0 = 1'b1;
    end else begin
        data_shift1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        data_shift1_d0 = data_shift1_q0;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3))) begin
        data_shift1_d0 = tmp_24_cast_fu_952_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        data_shift1_d0 = ap_const_lv17_0;
    end else begin
        data_shift1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3)) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_fu_746_p2)) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        data_shift1_we0 = 1'b1;
    end else begin
        data_shift1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        data_shift2_address0 = tmp_54_cast_fu_964_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3))) begin
        data_shift2_address0 = data_shift2_addr_1_reg_1436;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        data_shift2_address0 = tmp_17_cast_fu_762_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == tmp_40_fu_854_p3))) begin
        data_shift2_address0 = tmp_50_cast_fu_898_p1;
    end else begin
        data_shift2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == tmp_40_fu_854_p3)) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3)) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        data_shift2_ce0 = 1'b1;
    end else begin
        data_shift2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        data_shift2_d0 = data_shift2_q0;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3))) begin
        data_shift2_d0 = tmp_26_cast_fu_956_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        data_shift2_d0 = ap_const_lv17_0;
    end else begin
        data_shift2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3)) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_fu_746_p2)) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        data_shift2_we0 = 1'b1;
    end else begin
        data_shift2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        in_stream_TDATA_blk_n = in_stream_TVALID;
    end else begin
        in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(in_stream_TVALID == 1'b0))) begin
        in_stream_TREADY = 1'b1;
    end else begin
        in_stream_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        out_stream_TDATA_blk_n = out_stream_TREADY;
    end else begin
        out_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & (1'b0 == ap_reg_ioackin_out_stream_TREADY))) begin
        out_stream_TVALID = 1'b1;
    end else begin
        out_stream_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_overP1_address0 = tmp_18_reg_1411;
    end else if ((((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == tmp_40_fu_854_p3)) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3)) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        sum_overP1_address0 = sum_overP1_addr_reg_1461;
    end else begin
        sum_overP1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(in_stream_TVALID == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == tmp_40_fu_854_p3)) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3)) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        sum_overP1_ce0 = 1'b1;
    end else begin
        sum_overP1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        sum_overP1_d0 = tmp_34_fu_987_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        sum_overP1_d0 = tmp_32_fu_973_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_overP1_d0 = ap_const_lv32_0;
    end else begin
        sum_overP1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(in_stream_TVALID == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        sum_overP1_we0 = 1'b1;
    end else begin
        sum_overP1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_overP2_address0 = tmp_18_reg_1411;
    end else if ((((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == tmp_40_fu_854_p3)) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3)) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        sum_overP2_address0 = sum_overP2_addr_reg_1466;
    end else begin
        sum_overP2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(in_stream_TVALID == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == tmp_40_fu_854_p3)) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_40_fu_854_p3)) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        sum_overP2_ce0 = 1'b1;
    end else begin
        sum_overP2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        sum_overP2_d0 = tmp_35_fu_993_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        sum_overP2_d0 = tmp_33_fu_980_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_overP2_d0 = ap_const_lv32_0;
    end else begin
        sum_overP2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(in_stream_TVALID == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        sum_overP2_we0 = 1'b1;
    end else begin
        sum_overP2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_pix1_address0 = sum_pix1_addr_3_reg_1421;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        sum_pix1_address0 = tmp_s_fu_779_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        sum_pix1_address0 = tmp_3_fu_691_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        sum_pix1_address0 = tmp_9_fu_1030_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        sum_pix1_address0 = tmp_18_fu_808_p1;
    end else begin
        sum_pix1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | ((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(in_stream_TVALID == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        sum_pix1_ce0 = 1'b1;
    end else begin
        sum_pix1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_pix1_d0 = tmp_25_fu_836_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        sum_pix1_d0 = ap_const_lv32_0;
    end else begin
        sum_pix1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(in_stream_TVALID == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_680_p2)) | ((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond2_fu_768_p2)))) begin
        sum_pix1_we0 = 1'b1;
    end else begin
        sum_pix1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_pix2_address0 = sum_pix2_addr_3_reg_1426;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        sum_pix2_address0 = tmp_s_fu_779_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        sum_pix2_address0 = tmp_3_fu_691_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        sum_pix2_address0 = tmp_9_fu_1030_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        sum_pix2_address0 = tmp_18_fu_808_p1;
    end else begin
        sum_pix2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | ((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(in_stream_TVALID == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        sum_pix2_ce0 = 1'b1;
    end else begin
        sum_pix2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_pix2_d0 = tmp_27_fu_847_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        sum_pix2_d0 = ap_const_lv32_0;
    end else begin
        sum_pix2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(in_stream_TVALID == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_680_p2)) | ((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond2_fu_768_p2)))) begin
        sum_pix2_we0 = 1'b1;
    end else begin
        sum_pix2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        thresh1_address0 = tmp_9_reg_1533;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        thresh1_address0 = tmp_3_fu_691_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        thresh1_address0 = tmp_18_reg_1411;
    end else begin
        thresh1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st62_fsm_61))) begin
        thresh1_ce0 = 1'b1;
    end else begin
        thresh1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        thresh1_d0 = result_V_fu_1221_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        thresh1_d0 = ap_const_lv32_639C;
    end else begin
        thresh1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_680_p2)) | (1'b1 == ap_sig_cseq_ST_st62_fsm_61))) begin
        thresh1_we0 = 1'b1;
    end else begin
        thresh1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        thresh2_address0 = tmp_9_reg_1533;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        thresh2_address0 = tmp_3_fu_691_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        thresh2_address0 = tmp_18_reg_1411;
    end else begin
        thresh2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st62_fsm_61))) begin
        thresh2_ce0 = 1'b1;
    end else begin
        thresh2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        thresh2_d0 = result_V_1_fu_1321_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        thresh2_d0 = ap_const_lv32_639C;
    end else begin
        thresh2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_680_p2)) | (1'b1 == ap_sig_cseq_ST_st62_fsm_61))) begin
        thresh2_we0 = 1'b1;
    end else begin
        thresh2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (((1'b0 == tmp_36_reg_1504) & ~(1'b0 == or_cond_fu_1010_p2)) | (~(1'b0 == tmp_36_reg_1504) & ~(1'b0 == p_old_reg_1518))))) begin
        trig_data = ap_const_lv32_1;
    end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        trig_data = ap_const_lv32_0;
    end else begin
        trig_data = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | ((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (((1'b0 == tmp_36_reg_1504) & ~(1'b0 == or_cond_fu_1010_p2)) | (~(1'b0 == tmp_36_reg_1504) & ~(1'b0 == p_old_reg_1518)))))) begin
        trig_data_ap_vld = 1'b1;
    end else begin
        trig_data_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((1'b0 == exitcond9_fu_680_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(exitcond1_fu_699_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if ((1'b0 == exitcond8_fu_746_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if ((1'b0 == tmp_nbreadreq_fu_224_p9)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            if ((1'b0 == exitcond2_fu_768_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : begin
            if (~(1'b0 == exitcond_fu_785_p2)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : begin
            if ((1'b0 == exitcond7_fu_797_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st9_fsm_8 : begin
            if (~(in_stream_TVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st10_fsm_9 : begin
            if (~(1'b0 == tmp_40_fu_854_p3)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st12_fsm_11 : begin
            if ((~(1'b0 == tmp_36_fu_999_p2) & (1'b0 == grp_fu_660_p2))) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st13_fsm_12 : begin
            if ((((1'b0 == tmp_36_reg_1504) & ~(1'b0 == or_cond_fu_1010_p2)) | (~(1'b0 == tmp_36_reg_1504) & ~(1'b0 == p_old_reg_1518)))) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st15_fsm_14 : begin
            if ((1'b0 == exitcond6_fu_1019_p2)) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st16_fsm_15 : begin
            if (~(1'b0 == ap_sig_ioackin_out_stream_TREADY)) begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_113 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_121 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_175 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_184 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_203 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_212 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_221 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_230 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_267 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_289 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_309 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_337 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_348 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_359 = (1'b1 == ap_CS_fsm[ap_const_lv32_32]);
end

always @ (*) begin
    ap_sig_370 = (1'b1 == ap_CS_fsm[ap_const_lv32_37]);
end

always @ (*) begin
    ap_sig_381 = (1'b1 == ap_CS_fsm[ap_const_lv32_3C]);
end

always @ (*) begin
    ap_sig_492 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_518 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_529 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_547 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_556 = (1'b1 == ap_CS_fsm[ap_const_lv32_3D]);
end

always @ (*) begin
    ap_sig_655 = (1'b1 == ap_CS_fsm[ap_const_lv32_38]);
end

always @ (*) begin
    ap_sig_667 = (1'b1 == ap_CS_fsm[ap_const_lv32_33]);
end

always @ (*) begin
    ap_sig_679 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_79 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign exitcond1_fu_699_p2 = ((kk_reg_512 == ap_const_lv4_8) ? 1'b1 : 1'b0);

assign exitcond2_fu_768_p2 = ((i_2_reg_534 == n_pixels_in_bus_read_reg_1330) ? 1'b1 : 1'b0);

assign exitcond6_fu_1019_p2 = ((i_4_reg_615 == tmp_1_reg_1335) ? 1'b1 : 1'b0);

assign exitcond7_fu_797_p2 = ((i_3_reg_568 == tmp_1_reg_1335) ? 1'b1 : 1'b0);

assign exitcond8_fu_746_p2 = ((i_1_reg_523 == tmp_1_reg_1335) ? 1'b1 : 1'b0);

assign exitcond9_fu_680_p2 = ((i_reg_501 == tmp_1_reg_1335) ? 1'b1 : 1'b0);

assign exitcond_fu_785_p2 = ((k_reg_545 == ap_const_lv8_80) ? 1'b1 : 1'b0);

assign extLd1_fu_969_p1 = $signed(data_shift2_q0);

assign extLd_fu_960_p1 = $signed(data_shift1_q0);

assign grp_fu_644_p0 = sum_pixP1_fu_1070_p3;

assign grp_fu_647_p0 = sum_pixP2_fu_1077_p3;

assign grp_fu_660_p2 = ((itrig_1_reg_584 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign i_4_cast_fu_1015_p1 = i_4_reg_615;

assign i_5_fu_685_p2 = (i_reg_501 + ap_const_lv15_1);

assign i_6_fu_751_p2 = (i_1_reg_523 + ap_const_lv15_1);

assign i_7_fu_773_p2 = (i_2_reg_534 + ap_const_lv16_1);

assign i_8_fu_1024_p2 = (i_4_reg_615 + ap_const_lv15_1);

assign i_9_fu_802_p2 = (i_3_reg_568 + ap_const_lv15_1);

assign isNeg_1_fu_1250_p3 = sh_assign_2_fu_1244_p2[ap_const_lv32_B];

assign isNeg_fu_1150_p3 = sh_assign_fu_1144_p2[ap_const_lv32_B];

assign k_1_fu_791_p2 = (k_reg_545 + ap_const_lv8_1);

assign kk_2_fu_705_p2 = (kk_reg_512 + ap_const_lv4_1);

assign kk_3_fu_946_p2 = ($signed(kk_1_reg_604) + $signed(ap_const_lv4_F));

assign l3_data_last_V_fu_1036_p2 = ((i_4_cast_fu_1015_p1 == tmp_5_reg_1369) ? 1'b1 : 1'b0);

assign loc_V_1_fu_1108_p1 = p_Val2_s_fu_1094_p1[51:0];

assign loc_V_3_fu_1126_p1 = p_Val2_4_fu_1112_p1[51:0];

assign or_cond_fu_1010_p2 = (tmp_37_fu_1005_p2 & tmp_38_reg_1513);

assign out_stream_TDATA = {{sum_pix2_q0}, {sum_pix1_q0}};

assign out_stream_TDEST = ap_const_lv6_0;

assign out_stream_TID = ap_const_lv5_0;

assign out_stream_TKEEP = ap_const_lv8_FF;

assign out_stream_TLAST = l3_data_last_V_reg_1549;

assign out_stream_TSTRB = ap_const_lv8_FF;

assign out_stream_TUSER = ap_const_lv2_0;

assign p_Result_4_fu_1230_p3 = {{1'b1}, {loc_V_3_reg_1623}};

assign p_Result_s_fu_1130_p3 = {{1'b1}, {loc_V_1_reg_1612}};

assign p_Val2_4_fu_1112_p1 = grp_fu_630_p2;

assign p_Val2_s_fu_1094_p1 = grp_fu_626_p2;

assign p_shl1_cast_fu_731_p1 = tmp_4_fu_723_p3;

assign p_shl2_cast_fu_918_p1 = tmp_45_fu_910_p3;

assign p_shl3_cast_fu_930_p1 = tmp_46_fu_922_p3;

assign p_shl4_cast_fu_870_p1 = $signed(tmp_41_fu_862_p3);

assign p_shl5_cast_fu_882_p1 = $signed(tmp_42_fu_874_p3);

assign p_shl_cast_fu_719_p1 = tmp_2_fu_711_p3;

assign phitmp_fu_822_p4 = {{in_stream_TDATA[ap_const_lv32_1F : ap_const_lv32_10]}};

assign result_V_1_fu_1321_p3 = ((isNeg_1_fu_1250_p3[0:0] === 1'b1) ? tmp_28_fu_1307_p1 : tmp_29_fu_1311_p4);

assign result_V_fu_1221_p3 = ((isNeg_fu_1150_p3[0:0] === 1'b1) ? tmp_16_fu_1207_p1 : tmp_17_fu_1211_p4);

assign sh_assign_1_cast_fu_1175_p1 = $signed(sh_assign_1_fu_1167_p3);

assign sh_assign_1_fu_1167_p3 = ((isNeg_fu_1150_p3[0:0] === 1'b1) ? tmp_i_i_cast_fu_1163_p1 : sh_assign_fu_1144_p2);

assign sh_assign_2_fu_1244_p2 = ($signed(ap_const_lv12_C01) + $signed(tmp_i_i_i6_cast1_fu_1241_p1));

assign sh_assign_3_cast_fu_1275_p1 = $signed(sh_assign_3_fu_1267_p3);

assign sh_assign_3_fu_1267_p3 = ((isNeg_1_fu_1250_p3[0:0] === 1'b1) ? tmp_i_i9_cast_fu_1263_p1 : sh_assign_2_fu_1244_p2);

assign sh_assign_fu_1144_p2 = ($signed(ap_const_lv12_C01) + $signed(tmp_i_i_i_cast2_fu_1141_p1));

assign sum_pixP1_fu_1070_p3 = {{tmp_10_reg_1554}, {ap_const_lv3_0}};

assign sum_pixP2_fu_1077_p3 = {{tmp_11_reg_1559}, {ap_const_lv3_0}};

assign tmp_16_fu_1207_p1 = tmp_22_fu_1199_p3;

assign tmp_17_cast_fu_762_p1 = tmp_8_fu_757_p2;

assign tmp_17_fu_1211_p4 = {{tmp_44_i_i_fu_1193_p2[ap_const_lv32_53 : ap_const_lv32_34]}};

assign tmp_18_fu_808_p1 = i_3_reg_568;

assign tmp_1_fu_666_p4 = {{n_pixels_in_bus[ap_const_lv32_F : ap_const_lv32_1]}};

assign tmp_22_fu_1199_p3 = tmp_42_i_i_fu_1187_p2[ap_const_lv32_34];

assign tmp_24_cast_fu_952_p1 = $signed(tmp_39_reg_1441);

assign tmp_24_fu_832_p1 = $signed(tmp_39_fu_818_p1);

assign tmp_25_fu_836_p2 = ($signed(sum_pix1_q0) + $signed(tmp_24_fu_832_p1));

assign tmp_26_cast_fu_956_p1 = $signed(phitmp_reg_1446);

assign tmp_26_fu_843_p1 = $signed(phitmp_fu_822_p4);

assign tmp_27_fu_847_p2 = ($signed(sum_pix2_q0) + $signed(tmp_26_fu_843_p1));

assign tmp_28_fu_1307_p1 = tmp_31_fu_1299_p3;

assign tmp_29_fu_1311_p4 = {{tmp_44_i_i1_fu_1293_p2[ap_const_lv32_53 : ap_const_lv32_34]}};

assign tmp_2_fu_711_p3 = {{kk_reg_512}, {ap_const_lv10_0}};

assign tmp_30_fu_904_p2 = (kk_1_reg_604 + ap_const_lv4_1);

assign tmp_31_fu_1299_p3 = tmp_42_i_i1_fu_1287_p2[ap_const_lv32_34];

assign tmp_32_fu_973_p2 = ($signed(sum_overP1_q0) + $signed(extLd_fu_960_p1));

assign tmp_33_fu_980_p2 = ($signed(sum_overP2_q0) + $signed(extLd1_fu_969_p1));

assign tmp_34_fu_987_p2 = ($signed(tmp_24_reg_1451) + $signed(sum_overP1_q0));

assign tmp_35_fu_993_p2 = ($signed(tmp_26_reg_1456) + $signed(sum_overP2_q0));

assign tmp_36_fu_999_p2 = ((tmp_34_fu_987_p2 > thresh1_q0) ? 1'b1 : 1'b0);

assign tmp_37_fu_1005_p2 = ((tmp_35_reg_1499 > thresh2_q0) ? 1'b1 : 1'b0);

assign tmp_39_fu_818_p1 = in_stream_TDATA[15:0];

assign tmp_3_fu_691_p1 = i_reg_501;

assign tmp_40_fu_854_p3 = kk_1_reg_604[ap_const_lv32_3];

assign tmp_41_fu_862_p3 = {{kk_1_reg_604}, {ap_const_lv10_0}};

assign tmp_41_i_i1_cast_fu_1283_p1 = $unsigned(sh_assign_3_cast_fu_1275_p1);

assign tmp_41_i_i1_fu_1279_p1 = $unsigned(sh_assign_3_cast_fu_1275_p1);

assign tmp_41_i_i_cast_fu_1183_p1 = $unsigned(sh_assign_1_cast_fu_1175_p1);

assign tmp_41_i_i_fu_1179_p1 = $unsigned(sh_assign_1_cast_fu_1175_p1);

assign tmp_42_fu_874_p3 = {{kk_1_reg_604}, {ap_const_lv7_0}};

assign tmp_42_i_i1_fu_1287_p2 = p_Result_4_fu_1230_p3 >> tmp_41_i_i1_cast_fu_1283_p1;

assign tmp_42_i_i_fu_1187_p2 = p_Result_s_fu_1130_p3 >> tmp_41_i_i_cast_fu_1183_p1;

assign tmp_43_fu_886_p2 = ($signed(p_shl5_cast_fu_882_p1) + $signed(p_shl4_cast_fu_870_p1));

assign tmp_44_fu_892_p2 = (tmp_43_fu_886_p2 + i_3_reg_568);

assign tmp_44_i_i1_fu_1293_p2 = tmp_i_i5_fu_1237_p1 << tmp_41_i_i1_fu_1279_p1;

assign tmp_44_i_i_fu_1193_p2 = tmp_i_i_fu_1137_p1 << tmp_41_i_i_fu_1179_p1;

assign tmp_45_fu_910_p3 = {{tmp_30_fu_904_p2}, {ap_const_lv10_0}};

assign tmp_46_fu_922_p3 = {{tmp_30_fu_904_p2}, {ap_const_lv7_0}};

assign tmp_47_fu_934_p2 = (p_shl3_cast_fu_930_p1 + p_shl2_cast_fu_918_p1);

assign tmp_48_fu_940_p2 = (tmp_47_fu_934_p2 + i_3_reg_568);

assign tmp_4_fu_723_p3 = {{kk_reg_512}, {ap_const_lv7_0}};

assign tmp_50_cast_fu_898_p1 = tmp_44_fu_892_p2;

assign tmp_54_cast_fu_964_p1 = tmp_48_reg_1484;

assign tmp_5_fu_741_p2 = ($signed(tmp_6_reg_1343) + $signed(ap_const_lv16_FFFF));

assign tmp_6_fu_676_p1 = tmp_1_fu_666_p4;

assign tmp_7_fu_735_p2 = (p_shl1_cast_fu_731_p1 + p_shl_cast_fu_719_p1);

assign tmp_8_fu_757_p2 = (tmp_7_reg_1364 + i_1_reg_523);

assign tmp_9_fu_1030_p1 = i_4_reg_615;

assign tmp_i_i5_fu_1237_p1 = p_Result_4_fu_1230_p3;

assign tmp_i_i9_cast_fu_1263_p1 = $signed(tmp_i_i9_fu_1258_p2);

assign tmp_i_i9_fu_1258_p2 = (ap_const_lv11_3FF - loc_V_2_reg_1617);

assign tmp_i_i_19_fu_1158_p2 = (ap_const_lv11_3FF - loc_V_reg_1606);

assign tmp_i_i_cast_fu_1163_p1 = $signed(tmp_i_i_19_fu_1158_p2);

assign tmp_i_i_fu_1137_p1 = p_Result_s_fu_1130_p3;

assign tmp_i_i_i6_cast1_fu_1241_p1 = loc_V_2_reg_1617;

assign tmp_i_i_i_cast2_fu_1141_p1 = loc_V_reg_1606;

assign tmp_nbreadreq_fu_224_p9 = in_stream_TVALID;

assign tmp_s_fu_779_p1 = i_2_reg_534;

always @ (posedge ap_clk) begin
    tmp_6_reg_1343[15] <= 1'b0;
    tmp_7_reg_1364[6:0] <= 7'b0000000;
    tmp_18_reg_1411[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    tmp_9_reg_1533[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
end

endmodule //l2_trigger
