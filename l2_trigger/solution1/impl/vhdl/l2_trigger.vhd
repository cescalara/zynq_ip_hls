-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity l2_trigger is
generic (
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    in_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    in_stream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_stream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    out_stream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    double_trig : OUT STD_LOGIC_VECTOR (31 downto 0);
    double_trig_ap_vld : OUT STD_LOGIC;
    trig_data : OUT STD_LOGIC_VECTOR (31 downto 0);
    trig_data_ap_vld : OUT STD_LOGIC;
    trig_pixel : OUT STD_LOGIC_VECTOR (31 downto 0);
    trig_pixel_ap_vld : OUT STD_LOGIC;
    s_axi_CTRL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of l2_trigger is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "l2_trigger,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z030ffg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.650000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=58,HLS_SYN_DSP=4,HLS_SYN_FF=778,HLS_SYN_LUT=1253}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_639C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000110001110011100";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_38 : BOOLEAN;
    signal ap_ready : STD_LOGIC;
    signal n_pixels_in_bus : STD_LOGIC_VECTOR (15 downto 0);
    signal N_BG : STD_LOGIC_VECTOR (7 downto 0);
    signal LOW_THRESH : STD_LOGIC_VECTOR (31 downto 0);
    signal in_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_78 : BOOLEAN;
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_86 : BOOLEAN;
    signal LOW_THRESH_read_reg_1150 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_662_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1158 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1164 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_5_fu_681_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_140 : BOOLEAN;
    signal kk_2_fu_701_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal kk_2_reg_1184 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_149 : BOOLEAN;
    signal tmp_3_fu_731_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_3_reg_1189 : STD_LOGIC_VECTOR (14 downto 0);
    signal exitcond1_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_6_fu_742_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_164 : BOOLEAN;
    signal i_7_fu_764_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_173 : BOOLEAN;
    signal tmp_5_fu_782_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_reg_1216 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_182 : BOOLEAN;
    signal i_9_fu_793_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_9_reg_1224 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_191 : BOOLEAN;
    signal tmp_15_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_reg_1229 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond7_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_pix1_addr_3_reg_1240 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_pix2_addr_3_reg_1245 : STD_LOGIC_VECTOR (10 downto 0);
    signal data_shift1_addr_1_reg_1250 : STD_LOGIC_VECTOR (13 downto 0);
    signal data_shift2_addr_1_reg_1255 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_16_fu_809_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_reg_1260 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp_fu_813_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp_reg_1265 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_823_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_1270 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_834_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_1275 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_overP1_addr_reg_1280 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_overP2_addr_reg_1285 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_228 : BOOLEAN;
    signal tmp_22_fu_845_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal kk_3_fu_973_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_246 : BOOLEAN;
    signal tmp_23_fu_979_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_1313 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_255 : BOOLEAN;
    signal tmp_25_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_1319 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1332 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_270 : BOOLEAN;
    signal thresh1_addr_3_gep_fu_489_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_279 : BOOLEAN;
    signal i_8_fu_1067_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_8_reg_1347 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_288 : BOOLEAN;
    signal exitcond6_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal thresh1_addr_1_reg_1362 : STD_LOGIC_VECTOR (10 downto 0);
    signal thresh2_addr_1_reg_1367 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_reg_1372 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_sig_ioackin_out_stream_TREADY : STD_LOGIC;
    signal tmp_11_reg_1377 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_12_fu_1132_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_1382 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_316 : BOOLEAN;
    signal tmp_13_fu_1137_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_1388 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_1394 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_327 : BOOLEAN;
    signal sum_overP1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_overP1_ce0 : STD_LOGIC;
    signal sum_overP1_we0 : STD_LOGIC;
    signal sum_overP1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_overP1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_overP2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_overP2_ce0 : STD_LOGIC;
    signal sum_overP2_we0 : STD_LOGIC;
    signal sum_overP2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_overP2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_pix1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_pix1_ce0 : STD_LOGIC;
    signal sum_pix1_we0 : STD_LOGIC;
    signal sum_pix1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_pix1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_shift1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal data_shift1_ce0 : STD_LOGIC;
    signal data_shift1_we0 : STD_LOGIC;
    signal data_shift1_d0 : STD_LOGIC_VECTOR (16 downto 0);
    signal data_shift1_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal thresh1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal thresh1_ce0 : STD_LOGIC;
    signal thresh1_we0 : STD_LOGIC;
    signal thresh1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal thresh1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_pix2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_pix2_ce0 : STD_LOGIC;
    signal sum_pix2_we0 : STD_LOGIC;
    signal sum_pix2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_pix2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_shift2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal data_shift2_ce0 : STD_LOGIC;
    signal data_shift2_we0 : STD_LOGIC;
    signal data_shift2_d0 : STD_LOGIC_VECTOR (16 downto 0);
    signal data_shift2_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal thresh2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal thresh2_ce0 : STD_LOGIC;
    signal thresh2_we0 : STD_LOGIC;
    signal thresh2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal thresh2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_522 : STD_LOGIC_VECTOR (14 downto 0);
    signal exitcond2_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kk_reg_533 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond9_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg_544 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_2_reg_555 : STD_LOGIC_VECTOR (14 downto 0);
    signal exitcond8_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_431 : BOOLEAN;
    signal tmp_nbreadreq_fu_238_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_reg_566 : STD_LOGIC_VECTOR (7 downto 0);
    signal itrig_reg_577 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_3_reg_589 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_454 : BOOLEAN;
    signal exitcond_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal itrig_1_reg_601 : STD_LOGIC_VECTOR (31 downto 0);
    signal kk_1_reg_613 : STD_LOGIC_VECTOR (3 downto 0);
    signal itrig_5_reg_625 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_470 : BOOLEAN;
    signal grp_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_reg_645 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_493 : BOOLEAN;
    signal tmp_4_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_cast_fu_753_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_770_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_cast_fu_889_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_cast_fu_949_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_1073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_cast_fu_1016_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_cast_fu_1035_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal brmerge_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ioackin_out_stream_TREADY : STD_LOGIC := '0';
    signal tmp_18_fu_827_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_838_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_cast_fu_895_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_cast_fu_899_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_fu_959_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_966_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_985_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_707_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_719_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl1_cast_fu_727_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl_cast_fu_715_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_fu_748_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_26_fu_853_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_28_fu_865_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl5_cast_fu_873_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl4_cast_fu_861_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_31_fu_877_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_32_fu_883_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_27_fu_907_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_33_fu_913_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_40_fu_925_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl3_cast_fu_933_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl2_cast_fu_921_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_41_fu_937_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_42_fu_943_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal extLd_fu_903_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal extLd1_fu_955_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1008_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_fu_1021_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_1029_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ult_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_not_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_pixP1_fu_1110_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sum_pixP2_fu_1121_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_12_fu_1132_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_12_fu_1132_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_1137_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_13_fu_1137_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_12_fu_1132_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1137_p00 : STD_LOGIC_VECTOR (31 downto 0);

    component l2_trigger_sum_overP1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component l2_trigger_data_shift1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (16 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component l2_trigger_CTRL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        n_pixels_in_bus : OUT STD_LOGIC_VECTOR (15 downto 0);
        N_BG : OUT STD_LOGIC_VECTOR (7 downto 0);
        LOW_THRESH : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    l2_trigger_CTRL_BUS_s_axi_U : component l2_trigger_CTRL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_BUS_AWVALID,
        AWREADY => s_axi_CTRL_BUS_AWREADY,
        AWADDR => s_axi_CTRL_BUS_AWADDR,
        WVALID => s_axi_CTRL_BUS_WVALID,
        WREADY => s_axi_CTRL_BUS_WREADY,
        WDATA => s_axi_CTRL_BUS_WDATA,
        WSTRB => s_axi_CTRL_BUS_WSTRB,
        ARVALID => s_axi_CTRL_BUS_ARVALID,
        ARREADY => s_axi_CTRL_BUS_ARREADY,
        ARADDR => s_axi_CTRL_BUS_ARADDR,
        RVALID => s_axi_CTRL_BUS_RVALID,
        RREADY => s_axi_CTRL_BUS_RREADY,
        RDATA => s_axi_CTRL_BUS_RDATA,
        RRESP => s_axi_CTRL_BUS_RRESP,
        BVALID => s_axi_CTRL_BUS_BVALID,
        BREADY => s_axi_CTRL_BUS_BREADY,
        BRESP => s_axi_CTRL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        n_pixels_in_bus => n_pixels_in_bus,
        N_BG => N_BG,
        LOW_THRESH => LOW_THRESH);

    sum_overP1_U : component l2_trigger_sum_overP1
    generic map (
        DataWidth => 32,
        AddressRange => 1152,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => sum_overP1_address0,
        ce0 => sum_overP1_ce0,
        we0 => sum_overP1_we0,
        d0 => sum_overP1_d0,
        q0 => sum_overP1_q0);

    sum_overP2_U : component l2_trigger_sum_overP1
    generic map (
        DataWidth => 32,
        AddressRange => 1152,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => sum_overP2_address0,
        ce0 => sum_overP2_ce0,
        we0 => sum_overP2_we0,
        d0 => sum_overP2_d0,
        q0 => sum_overP2_q0);

    sum_pix1_U : component l2_trigger_sum_overP1
    generic map (
        DataWidth => 32,
        AddressRange => 1152,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => sum_pix1_address0,
        ce0 => sum_pix1_ce0,
        we0 => sum_pix1_we0,
        d0 => sum_pix1_d0,
        q0 => sum_pix1_q0);

    data_shift1_U : component l2_trigger_data_shift1
    generic map (
        DataWidth => 17,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => data_shift1_address0,
        ce0 => data_shift1_ce0,
        we0 => data_shift1_we0,
        d0 => data_shift1_d0,
        q0 => data_shift1_q0);

    thresh1_U : component l2_trigger_sum_overP1
    generic map (
        DataWidth => 32,
        AddressRange => 1152,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => thresh1_address0,
        ce0 => thresh1_ce0,
        we0 => thresh1_we0,
        d0 => thresh1_d0,
        q0 => thresh1_q0);

    sum_pix2_U : component l2_trigger_sum_overP1
    generic map (
        DataWidth => 32,
        AddressRange => 1152,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => sum_pix2_address0,
        ce0 => sum_pix2_ce0,
        we0 => sum_pix2_we0,
        d0 => sum_pix2_d0,
        q0 => sum_pix2_q0);

    data_shift2_U : component l2_trigger_data_shift1
    generic map (
        DataWidth => 17,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => data_shift2_address0,
        ce0 => data_shift2_ce0,
        we0 => data_shift2_we0,
        d0 => data_shift2_d0,
        q0 => data_shift2_q0);

    thresh2_U : component l2_trigger_sum_overP1
    generic map (
        DataWidth => 32,
        AddressRange => 1152,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => thresh2_address0,
        ce0 => thresh2_ce0,
        we0 => thresh2_we0,
        d0 => thresh2_d0,
        q0 => thresh2_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_out_stream_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_out_stream_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))) then 
                    ap_reg_ioackin_out_stream_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (ap_const_logic_1 = out_stream_TREADY)))) then 
                    ap_reg_ioackin_out_stream_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_544_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (exitcond1_fu_695_p2 = ap_const_lv1_0))) then 
                i_1_reg_544 <= ap_const_lv15_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond9_fu_737_p2))) then 
                i_1_reg_544 <= i_6_fu_742_p2;
            end if; 
        end if;
    end process;

    i_2_reg_555_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_238_p9)))) then 
                i_2_reg_555 <= ap_const_lv15_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond8_fu_759_p2))) then 
                i_2_reg_555 <= i_7_fu_764_p2;
            end if; 
        end if;
    end process;

    i_3_reg_589_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond_fu_776_p2))) then 
                i_3_reg_589 <= ap_const_lv15_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                i_3_reg_589 <= i_9_reg_1224;
            end if; 
        end if;
    end process;

    i_4_reg_645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond_fu_776_p2)))) then 
                i_4_reg_645 <= ap_const_lv15_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
                i_4_reg_645 <= i_8_reg_1347;
            end if; 
        end if;
    end process;

    i_reg_522_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_676_p2))) then 
                i_reg_522 <= i_5_fu_681_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_522 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    itrig_1_reg_601_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond_fu_776_p2))) then 
                itrig_1_reg_601 <= itrig_reg_577;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                itrig_1_reg_601 <= itrig_5_reg_625;
            end if; 
        end if;
    end process;

    itrig_5_reg_625_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = grp_fu_656_p2) and not((ap_const_lv1_0 = tmp_25_fu_991_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = or_cond_fu_1002_p2)))) then 
                itrig_5_reg_625 <= itrig_1_reg_601;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = tmp_25_reg_1319) and not((ap_const_lv1_0 = or_cond_reg_1332))))) then 
                itrig_5_reg_625 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    itrig_reg_577_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond7_fu_788_p2)))) then 
                itrig_reg_577 <= itrig_1_reg_601;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond8_fu_759_p2)))) then 
                itrig_reg_577 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    k_reg_566_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond7_fu_788_p2)))) then 
                k_reg_566 <= tmp_5_reg_1216;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond8_fu_759_p2)))) then 
                k_reg_566 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    kk_1_reg_613_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                kk_1_reg_613 <= kk_3_fu_973_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((in_stream_TVALID = ap_const_logic_0)))) then 
                kk_1_reg_613 <= ap_const_lv4_6;
            end if; 
        end if;
    end process;

    kk_reg_533_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond9_fu_737_p2)))) then 
                kk_reg_533 <= kk_2_reg_1184;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_676_p2)))) then 
                kk_reg_533 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                LOW_THRESH_read_reg_1150 <= LOW_THRESH;
                    tmp_1_reg_1158(7 downto 0) <= tmp_1_fu_662_p1(7 downto 0);
                tmp_2_reg_1164 <= n_pixels_in_bus(15 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((in_stream_TVALID = ap_const_logic_0)))) then
                data_shift1_addr_1_reg_1250 <= tmp_15_reg_1229(14 - 1 downto 0);
                data_shift2_addr_1_reg_1255 <= tmp_15_reg_1229(14 - 1 downto 0);
                phitmp_reg_1265 <= in_stream_TDATA(31 downto 16);
                sum_overP1_addr_reg_1280 <= tmp_15_reg_1229(11 - 1 downto 0);
                sum_overP2_addr_reg_1285 <= tmp_15_reg_1229(11 - 1 downto 0);
                tmp_16_reg_1260 <= tmp_16_fu_809_p1;
                tmp_17_reg_1270 <= tmp_17_fu_823_p1;
                tmp_19_reg_1275 <= tmp_19_fu_834_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then
                i_8_reg_1347 <= i_8_fu_1067_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                i_9_reg_1224 <= i_9_fu_793_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                kk_2_reg_1184 <= kk_2_fu_701_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                or_cond_reg_1332 <= or_cond_fu_1002_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond7_fu_788_p2))) then
                sum_pix1_addr_3_reg_1240 <= tmp_15_fu_799_p1(11 - 1 downto 0);
                sum_pix2_addr_3_reg_1245 <= tmp_15_fu_799_p1(11 - 1 downto 0);
                    tmp_15_reg_1229(14 downto 0) <= tmp_15_fu_799_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and (ap_const_lv1_0 = exitcond6_fu_1062_p2))) then
                thresh1_addr_1_reg_1362 <= tmp_9_fu_1073_p1(11 - 1 downto 0);
                thresh2_addr_1_reg_1367 <= tmp_9_fu_1073_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) then
                tmp_10_reg_1372 <= sum_pix1_q0(31 downto 7);
                tmp_11_reg_1377 <= sum_pix2_q0(31 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then
                tmp_12_reg_1382 <= tmp_12_fu_1132_p2;
                tmp_13_reg_1388 <= tmp_13_fu_1137_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then
                tmp_14_reg_1394 <= tmp_14_fu_1142_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then
                tmp_23_reg_1313 <= tmp_23_fu_979_p2;
                tmp_25_reg_1319 <= tmp_25_fu_991_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (exitcond1_fu_695_p2 = ap_const_lv1_0))) then
                    tmp_3_reg_1189(14 downto 7) <= tmp_3_fu_731_p2(14 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                tmp_5_reg_1216 <= tmp_5_fu_782_p2;
            end if;
        end if;
    end process;
    tmp_1_reg_1158(31 downto 8) <= "000000000000000000000000";
    tmp_3_reg_1189(6 downto 0) <= "0000000";
    tmp_15_reg_1229(63 downto 15) <= "0000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, in_stream_TVALID, exitcond1_fu_695_p2, exitcond7_fu_788_p2, tmp_22_fu_845_p3, tmp_25_fu_991_p2, exitcond6_fu_1062_p2, ap_sig_ioackin_out_stream_TREADY, exitcond2_fu_676_p2, exitcond9_fu_737_p2, exitcond8_fu_759_p2, tmp_nbreadreq_fu_238_p9, exitcond_fu_776_p2, grp_fu_656_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((ap_const_lv1_0 = exitcond2_fu_676_p2)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((exitcond1_fu_695_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st4_fsm_3 => 
                if ((ap_const_lv1_0 = exitcond9_fu_737_p2)) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st5_fsm_4 => 
                if ((ap_const_lv1_0 = tmp_nbreadreq_fu_238_p9)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                if ((ap_const_lv1_0 = exitcond8_fu_759_p2)) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_lv1_0 = exitcond_fu_776_p2))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                if ((ap_const_lv1_0 = exitcond7_fu_788_p2)) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st9_fsm_8 => 
                if (not((in_stream_TVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_lv1_0 = tmp_22_fu_845_p3))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st12_fsm_11 => 
                if ((not((ap_const_lv1_0 = tmp_25_fu_991_p2)) and not((ap_const_lv1_0 = grp_fu_656_p2)))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                elsif (((ap_const_lv1_0 = grp_fu_656_p2) and not((ap_const_lv1_0 = tmp_25_fu_991_p2)))) then
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st17_fsm_16 => 
                if ((ap_const_lv1_0 = exitcond6_fu_1062_p2)) then
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st18_fsm_17 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))) then
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                else
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                end if;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, tmp_nbreadreq_fu_238_p9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = tmp_nbreadreq_fu_238_p9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, tmp_nbreadreq_fu_238_p9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = tmp_nbreadreq_fu_238_p9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_140_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_140 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_149_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_149 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_164_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_164 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_173_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_173 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_182_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_182 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_191_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_191 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_228_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_228 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_246_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_246 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_255_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_255 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_270_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_270 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_279_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_279 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_288_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_288 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_316_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_316 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_327_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_327 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_38_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_38 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_431_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_431 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_454_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_454 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_470_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_470 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_493_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_493 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_78_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_78 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_86_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_86 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_228)
    begin
        if (ap_sig_228) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_246)
    begin
        if (ap_sig_246) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_255)
    begin
        if (ap_sig_255) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_270)
    begin
        if (ap_sig_270) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_279)
    begin
        if (ap_sig_279) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_470)
    begin
        if (ap_sig_470) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_454)
    begin
        if (ap_sig_454) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_288)
    begin
        if (ap_sig_288) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_86)
    begin
        if (ap_sig_86) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_316)
    begin
        if (ap_sig_316) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_38)
    begin
        if (ap_sig_38) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_327)
    begin
        if (ap_sig_327) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_493)
    begin
        if (ap_sig_493) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_140)
    begin
        if (ap_sig_140) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_149)
    begin
        if (ap_sig_149) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_164)
    begin
        if (ap_sig_164) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_431)
    begin
        if (ap_sig_431) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_173)
    begin
        if (ap_sig_173) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_182)
    begin
        if (ap_sig_182) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_191)
    begin
        if (ap_sig_191) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_78)
    begin
        if (ap_sig_78) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_out_stream_TREADY_assign_proc : process(out_stream_TREADY, ap_reg_ioackin_out_stream_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) then 
            ap_sig_ioackin_out_stream_TREADY <= out_stream_TREADY;
        else 
            ap_sig_ioackin_out_stream_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    brmerge_fu_1056_p2 <= (rev_fu_1045_p2 or tmp_34_not_fu_1051_p2);

    data_shift1_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, data_shift1_addr_1_reg_1250, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10, tmp_18_cast_fu_753_p1, tmp_45_cast_fu_889_p1, tmp_49_cast_fu_949_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            data_shift1_address0 <= tmp_49_cast_fu_949_p1(14 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3)))) then 
            data_shift1_address0 <= data_shift1_addr_1_reg_1250;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            data_shift1_address0 <= tmp_18_cast_fu_753_p1(14 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_lv1_0 = tmp_22_fu_845_p3))) then 
            data_shift1_address0 <= tmp_45_cast_fu_889_p1(14 - 1 downto 0);
        else 
            data_shift1_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    data_shift1_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_lv1_0 = tmp_22_fu_845_p3)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            data_shift1_ce0 <= ap_const_logic_1;
        else 
            data_shift1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_shift1_d0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10, data_shift1_q0, tmp_19_cast_fu_895_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            data_shift1_d0 <= data_shift1_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3)))) then 
            data_shift1_d0 <= tmp_19_cast_fu_895_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            data_shift1_d0 <= ap_const_lv17_0;
        else 
            data_shift1_d0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_shift1_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10, exitcond9_fu_737_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond9_fu_737_p2)))) then 
            data_shift1_we0 <= ap_const_logic_1;
        else 
            data_shift1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_shift2_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, data_shift2_addr_1_reg_1255, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10, tmp_18_cast_fu_753_p1, tmp_45_cast_fu_889_p1, tmp_49_cast_fu_949_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            data_shift2_address0 <= tmp_49_cast_fu_949_p1(14 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3)))) then 
            data_shift2_address0 <= data_shift2_addr_1_reg_1255;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            data_shift2_address0 <= tmp_18_cast_fu_753_p1(14 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_lv1_0 = tmp_22_fu_845_p3))) then 
            data_shift2_address0 <= tmp_45_cast_fu_889_p1(14 - 1 downto 0);
        else 
            data_shift2_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    data_shift2_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_lv1_0 = tmp_22_fu_845_p3)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            data_shift2_ce0 <= ap_const_logic_1;
        else 
            data_shift2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_shift2_d0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10, data_shift2_q0, tmp_21_cast_fu_899_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            data_shift2_d0 <= data_shift2_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3)))) then 
            data_shift2_d0 <= tmp_21_cast_fu_899_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            data_shift2_d0 <= ap_const_lv17_0;
        else 
            data_shift2_d0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_shift2_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10, exitcond9_fu_737_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond9_fu_737_p2)))) then 
            data_shift2_we0 <= ap_const_logic_1;
        else 
            data_shift2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    double_trig_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st16_fsm_15, brmerge_fu_1056_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_lv1_0 = brmerge_fu_1056_p2))) then 
            double_trig <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            double_trig <= ap_const_lv32_0;
        else 
            double_trig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    double_trig_ap_vld_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st16_fsm_15, brmerge_fu_1056_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_lv1_0 = brmerge_fu_1056_p2)))) then 
            double_trig_ap_vld <= ap_const_logic_1;
        else 
            double_trig_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_695_p2 <= "1" when (kk_reg_533 = ap_const_lv4_8) else "0";
    exitcond2_fu_676_p2 <= "1" when (i_reg_522 = tmp_2_reg_1164) else "0";
    exitcond6_fu_1062_p2 <= "1" when (i_4_reg_645 = tmp_2_reg_1164) else "0";
    exitcond7_fu_788_p2 <= "1" when (i_3_reg_589 = tmp_2_reg_1164) else "0";
    exitcond8_fu_759_p2 <= "1" when (i_2_reg_555 = tmp_2_reg_1164) else "0";
    exitcond9_fu_737_p2 <= "1" when (i_1_reg_544 = tmp_2_reg_1164) else "0";
    exitcond_fu_776_p2 <= "1" when (k_reg_566 = ap_const_lv8_80) else "0";
        extLd1_fu_955_p1 <= std_logic_vector(resize(signed(data_shift2_q0),32));

        extLd_fu_903_p1 <= std_logic_vector(resize(signed(data_shift1_q0),32));

    grp_fu_656_p2 <= "1" when (itrig_1_reg_601 = ap_const_lv32_0) else "0";
    i_5_fu_681_p2 <= std_logic_vector(unsigned(i_reg_522) + unsigned(ap_const_lv15_1));
    i_6_fu_742_p2 <= std_logic_vector(unsigned(i_1_reg_544) + unsigned(ap_const_lv15_1));
    i_7_fu_764_p2 <= std_logic_vector(unsigned(i_2_reg_555) + unsigned(ap_const_lv15_1));
    i_8_fu_1067_p2 <= std_logic_vector(unsigned(i_4_reg_645) + unsigned(ap_const_lv15_1));
    i_9_fu_793_p2 <= std_logic_vector(unsigned(i_3_reg_589) + unsigned(ap_const_lv15_1));

    in_stream_TDATA_blk_n_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            in_stream_TDATA_blk_n <= in_stream_TVALID;
        else 
            in_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_stream_TREADY_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((in_stream_TVALID = ap_const_logic_0))))) then 
            in_stream_TREADY <= ap_const_logic_1;
        else 
            in_stream_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    kk_2_fu_701_p2 <= std_logic_vector(unsigned(kk_reg_533) + unsigned(ap_const_lv4_1));
    kk_3_fu_973_p2 <= std_logic_vector(unsigned(kk_1_reg_613) + unsigned(ap_const_lv4_F));
    or_cond_fu_1002_p2 <= (tmp_35_fu_997_p2 and grp_fu_656_p2);
    out_stream_TDATA <= (sum_pix2_q0 & sum_pix1_q0);

    out_stream_TDATA_blk_n_assign_proc : process(out_stream_TREADY, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            out_stream_TDATA_blk_n <= out_stream_TREADY;
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_TDEST <= ap_const_lv6_0;
    out_stream_TID <= ap_const_lv5_0;
    out_stream_TKEEP <= ap_const_lv8_FF;
    out_stream_TLAST <= ap_const_lv1_0;
    out_stream_TSTRB <= ap_const_lv8_FF;
    out_stream_TUSER <= ap_const_lv2_0;

    out_stream_TVALID_assign_proc : process(ap_sig_cseq_ST_st18_fsm_17, ap_reg_ioackin_out_stream_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)))) then 
            out_stream_TVALID <= ap_const_logic_1;
        else 
            out_stream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_shl1_cast_fu_727_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_719_p3),15));
    p_shl2_cast_fu_921_p1 <= std_logic_vector(resize(unsigned(tmp_33_fu_913_p3),15));
    p_shl3_cast_fu_933_p1 <= std_logic_vector(resize(unsigned(tmp_40_fu_925_p3),15));
        p_shl4_cast_fu_861_p1 <= std_logic_vector(resize(signed(tmp_26_fu_853_p3),15));

        p_shl5_cast_fu_873_p1 <= std_logic_vector(resize(signed(tmp_28_fu_865_p3),15));

    p_shl_cast_fu_715_p1 <= std_logic_vector(resize(unsigned(tmp_6_fu_707_p3),15));
    phitmp_fu_813_p4 <= in_stream_TDATA(31 downto 16);
    rev_fu_1045_p2 <= (ult_fu_1040_p2 xor ap_const_lv1_1);

    sum_overP1_address0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, tmp_15_reg_1229, sum_overP1_addr_reg_1280, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            sum_overP1_address0 <= tmp_15_reg_1229(11 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_lv1_0 = tmp_22_fu_845_p3)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            sum_overP1_address0 <= sum_overP1_addr_reg_1280;
        else 
            sum_overP1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    sum_overP1_ce0_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((in_stream_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_lv1_0 = tmp_22_fu_845_p3)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            sum_overP1_ce0 <= ap_const_logic_1;
        else 
            sum_overP1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_overP1_d0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st11_fsm_10, tmp_23_fu_979_p2, ap_sig_cseq_ST_st12_fsm_11, tmp_29_fu_959_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            sum_overP1_d0 <= tmp_23_fu_979_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            sum_overP1_d0 <= tmp_29_fu_959_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            sum_overP1_d0 <= ap_const_lv32_0;
        else 
            sum_overP1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_overP1_we0_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((in_stream_TVALID = ap_const_logic_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            sum_overP1_we0 <= ap_const_logic_1;
        else 
            sum_overP1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_overP2_address0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, tmp_15_reg_1229, sum_overP2_addr_reg_1285, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            sum_overP2_address0 <= tmp_15_reg_1229(11 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_lv1_0 = tmp_22_fu_845_p3)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            sum_overP2_address0 <= sum_overP2_addr_reg_1285;
        else 
            sum_overP2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    sum_overP2_ce0_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, tmp_22_fu_845_p3, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((in_stream_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_lv1_0 = tmp_22_fu_845_p3)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_22_fu_845_p3))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            sum_overP2_ce0 <= ap_const_logic_1;
        else 
            sum_overP2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_overP2_d0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11, tmp_30_fu_966_p2, tmp_24_fu_985_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            sum_overP2_d0 <= tmp_24_fu_985_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            sum_overP2_d0 <= tmp_30_fu_966_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            sum_overP2_d0 <= ap_const_lv32_0;
        else 
            sum_overP2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_overP2_we0_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((in_stream_TVALID = ap_const_logic_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            sum_overP2_we0 <= ap_const_logic_1;
        else 
            sum_overP2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_pix1_address0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7, tmp_15_fu_799_p1, sum_pix1_addr_3_reg_1240, ap_sig_cseq_ST_st17_fsm_16, tmp_4_fu_687_p1, tmp_7_fu_770_p1, tmp_9_fu_1073_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            sum_pix1_address0 <= sum_pix1_addr_3_reg_1240;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            sum_pix1_address0 <= tmp_7_fu_770_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            sum_pix1_address0 <= tmp_4_fu_687_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            sum_pix1_address0 <= tmp_9_fu_1073_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            sum_pix1_address0 <= tmp_15_fu_799_p1(11 - 1 downto 0);
        else 
            sum_pix1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    sum_pix1_ce0_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((in_stream_TVALID = ap_const_logic_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            sum_pix1_ce0 <= ap_const_logic_1;
        else 
            sum_pix1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_pix1_d0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5, tmp_18_fu_827_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            sum_pix1_d0 <= tmp_18_fu_827_p2;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            sum_pix1_d0 <= ap_const_lv32_0;
        else 
            sum_pix1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_pix1_we0_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5, exitcond2_fu_676_p2, exitcond8_fu_759_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((in_stream_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_676_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond8_fu_759_p2)))) then 
            sum_pix1_we0 <= ap_const_logic_1;
        else 
            sum_pix1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_pix2_address0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7, tmp_15_fu_799_p1, sum_pix2_addr_3_reg_1245, ap_sig_cseq_ST_st17_fsm_16, tmp_4_fu_687_p1, tmp_7_fu_770_p1, tmp_9_fu_1073_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            sum_pix2_address0 <= sum_pix2_addr_3_reg_1245;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            sum_pix2_address0 <= tmp_7_fu_770_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            sum_pix2_address0 <= tmp_4_fu_687_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            sum_pix2_address0 <= tmp_9_fu_1073_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            sum_pix2_address0 <= tmp_15_fu_799_p1(11 - 1 downto 0);
        else 
            sum_pix2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    sum_pix2_ce0_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((in_stream_TVALID = ap_const_logic_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            sum_pix2_ce0 <= ap_const_logic_1;
        else 
            sum_pix2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_pix2_d0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5, tmp_20_fu_838_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            sum_pix2_d0 <= tmp_20_fu_838_p2;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            sum_pix2_d0 <= ap_const_lv32_0;
        else 
            sum_pix2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_pix2_we0_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5, exitcond2_fu_676_p2, exitcond8_fu_759_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((in_stream_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_676_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond8_fu_759_p2)))) then 
            sum_pix2_we0 <= ap_const_logic_1;
        else 
            sum_pix2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sum_pixP1_fu_1110_p3 <= (tmp_10_reg_1372 & ap_const_lv3_0);
    sum_pixP2_fu_1121_p3 <= (tmp_11_reg_1377 & ap_const_lv3_0);
    thresh1_addr_3_gep_fu_489_p3 <= tmp_15_reg_1229(11 - 1 downto 0);

    thresh1_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, tmp_15_reg_1229, ap_sig_cseq_ST_st12_fsm_11, thresh1_addr_3_gep_fu_489_p3, ap_sig_cseq_ST_st14_fsm_13, thresh1_addr_1_reg_1362, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, tmp_4_fu_687_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20))) then 
            thresh1_address0 <= thresh1_addr_1_reg_1362;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            thresh1_address0 <= tmp_4_fu_687_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            thresh1_address0 <= thresh1_addr_3_gep_fu_489_p3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            thresh1_address0 <= tmp_15_reg_1229(11 - 1 downto 0);
        else 
            thresh1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    thresh1_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20))) then 
            thresh1_ce0 <= ap_const_logic_1;
        else 
            thresh1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    thresh1_d0_assign_proc : process(LOW_THRESH_read_reg_1150, ap_sig_cseq_ST_st2_fsm_1, tmp_12_reg_1382, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            thresh1_d0 <= LOW_THRESH_read_reg_1150;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            thresh1_d0 <= tmp_12_reg_1382;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            thresh1_d0 <= ap_const_lv32_639C;
        else 
            thresh1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    thresh1_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, tmp_14_reg_1394, ap_sig_cseq_ST_st20_fsm_19, exitcond2_fu_676_p2, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_676_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((ap_const_lv1_0 = tmp_14_reg_1394))))) then 
            thresh1_we0 <= ap_const_logic_1;
        else 
            thresh1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    thresh2_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, tmp_15_reg_1229, ap_sig_cseq_ST_st10_fsm_9, thresh2_addr_1_reg_1367, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, tmp_4_fu_687_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20))) then 
            thresh2_address0 <= thresh2_addr_1_reg_1367;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            thresh2_address0 <= tmp_4_fu_687_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            thresh2_address0 <= tmp_15_reg_1229(11 - 1 downto 0);
        else 
            thresh2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    thresh2_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20))) then 
            thresh2_ce0 <= ap_const_logic_1;
        else 
            thresh2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    thresh2_d0_assign_proc : process(LOW_THRESH_read_reg_1150, ap_sig_cseq_ST_st2_fsm_1, tmp_13_reg_1388, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            thresh2_d0 <= LOW_THRESH_read_reg_1150;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            thresh2_d0 <= tmp_13_reg_1388;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            thresh2_d0 <= ap_const_lv32_639C;
        else 
            thresh2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    thresh2_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st20_fsm_19, exitcond2_fu_676_p2, ap_sig_cseq_ST_st21_fsm_20, tmp_21_fu_1146_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_676_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((ap_const_lv1_0 = tmp_21_fu_1146_p2))))) then 
            thresh2_we0 <= ap_const_logic_1;
        else 
            thresh2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_12_fu_1132_p0 <= tmp_12_fu_1132_p00(28 - 1 downto 0);
    tmp_12_fu_1132_p00 <= std_logic_vector(resize(unsigned(sum_pixP1_fu_1110_p3),32));
    tmp_12_fu_1132_p1 <= tmp_1_reg_1158(8 - 1 downto 0);
    tmp_12_fu_1132_p2 <= std_logic_vector(resize(unsigned(tmp_12_fu_1132_p0) * unsigned(tmp_12_fu_1132_p1), 32));
    tmp_13_fu_1137_p0 <= tmp_13_fu_1137_p00(28 - 1 downto 0);
    tmp_13_fu_1137_p00 <= std_logic_vector(resize(unsigned(sum_pixP2_fu_1121_p3),32));
    tmp_13_fu_1137_p1 <= tmp_1_reg_1158(8 - 1 downto 0);
    tmp_13_fu_1137_p2 <= std_logic_vector(resize(unsigned(tmp_13_fu_1137_p0) * unsigned(tmp_13_fu_1137_p1), 32));
    tmp_14_fu_1142_p2 <= "1" when (unsigned(tmp_12_reg_1382) < unsigned(LOW_THRESH_read_reg_1150)) else "0";
    tmp_15_fu_799_p1 <= std_logic_vector(resize(unsigned(i_3_reg_589),64));
    tmp_16_fu_809_p1 <= in_stream_TDATA(16 - 1 downto 0);
        tmp_17_fu_823_p1 <= std_logic_vector(resize(signed(tmp_16_fu_809_p1),32));

    tmp_18_cast_fu_753_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_748_p2),64));
    tmp_18_fu_827_p2 <= std_logic_vector(unsigned(sum_pix1_q0) + unsigned(tmp_17_fu_823_p1));
        tmp_19_cast_fu_895_p1 <= std_logic_vector(resize(signed(tmp_16_reg_1260),17));

        tmp_19_fu_834_p1 <= std_logic_vector(resize(signed(phitmp_fu_813_p4),32));

    tmp_1_fu_662_p1 <= std_logic_vector(resize(unsigned(N_BG),32));
    tmp_20_fu_838_p2 <= std_logic_vector(unsigned(sum_pix2_q0) + unsigned(tmp_19_fu_834_p1));
        tmp_21_cast_fu_899_p1 <= std_logic_vector(resize(signed(phitmp_reg_1265),17));

    tmp_21_fu_1146_p2 <= "1" when (unsigned(tmp_13_reg_1388) < unsigned(LOW_THRESH_read_reg_1150)) else "0";
    tmp_22_fu_845_p3 <= kk_1_reg_613(3 downto 3);
    tmp_23_fu_979_p2 <= std_logic_vector(signed(tmp_17_reg_1270) + signed(sum_overP1_q0));
    tmp_24_fu_985_p2 <= std_logic_vector(signed(tmp_19_reg_1275) + signed(sum_overP2_q0));
    tmp_25_fu_991_p2 <= "1" when (unsigned(tmp_24_fu_985_p2) > unsigned(thresh2_q0)) else "0";
    tmp_26_fu_853_p3 <= (kk_1_reg_613 & ap_const_lv10_0);
    tmp_27_fu_907_p2 <= std_logic_vector(unsigned(kk_1_reg_613) + unsigned(ap_const_lv4_1));
    tmp_28_fu_865_p3 <= (kk_1_reg_613 & ap_const_lv7_0);
    tmp_29_fu_959_p2 <= std_logic_vector(unsigned(sum_overP1_q0) + unsigned(extLd_fu_903_p1));
    tmp_30_fu_966_p2 <= std_logic_vector(unsigned(sum_overP2_q0) + unsigned(extLd1_fu_955_p1));
    tmp_31_fu_877_p2 <= std_logic_vector(signed(p_shl5_cast_fu_873_p1) + signed(p_shl4_cast_fu_861_p1));
    tmp_32_fu_883_p2 <= std_logic_vector(unsigned(tmp_31_fu_877_p2) + unsigned(i_3_reg_589));
    tmp_33_fu_913_p3 <= (tmp_27_fu_907_p2 & ap_const_lv10_0);
    tmp_34_not_fu_1051_p2 <= (tmp_25_reg_1319 xor ap_const_lv1_1);
    tmp_35_fu_997_p2 <= "1" when (unsigned(tmp_23_reg_1313) > unsigned(thresh1_q0)) else "0";
    tmp_37_fu_1021_p3 <= (i_3_reg_589 & ap_const_lv1_0);
    tmp_38_fu_1029_p2 <= (tmp_37_fu_1021_p3 or ap_const_lv16_1);
    tmp_39_cast_fu_1035_p1 <= std_logic_vector(resize(unsigned(tmp_38_fu_1029_p2),32));
    tmp_39_fu_1008_p3 <= (i_3_reg_589 & ap_const_lv1_0);
    tmp_3_fu_731_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_727_p1) + unsigned(p_shl_cast_fu_715_p1));
    tmp_40_cast_fu_1016_p1 <= std_logic_vector(resize(unsigned(tmp_39_fu_1008_p3),32));
    tmp_40_fu_925_p3 <= (tmp_27_fu_907_p2 & ap_const_lv7_0);
    tmp_41_fu_937_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_933_p1) + unsigned(p_shl2_cast_fu_921_p1));
    tmp_42_fu_943_p2 <= std_logic_vector(unsigned(tmp_41_fu_937_p2) + unsigned(i_3_reg_589));
    tmp_45_cast_fu_889_p1 <= std_logic_vector(resize(unsigned(tmp_32_fu_883_p2),64));
    tmp_49_cast_fu_949_p1 <= std_logic_vector(resize(unsigned(tmp_42_fu_943_p2),64));
    tmp_4_fu_687_p1 <= std_logic_vector(resize(unsigned(i_reg_522),64));
    tmp_5_fu_782_p2 <= std_logic_vector(unsigned(k_reg_566) + unsigned(ap_const_lv8_1));
    tmp_6_fu_707_p3 <= (kk_reg_533 & ap_const_lv10_0);
    tmp_7_fu_770_p1 <= std_logic_vector(resize(unsigned(i_2_reg_555),64));
    tmp_8_fu_748_p2 <= std_logic_vector(unsigned(tmp_3_reg_1189) + unsigned(i_1_reg_544));
    tmp_9_fu_1073_p1 <= std_logic_vector(resize(unsigned(i_4_reg_645),64));
    tmp_nbreadreq_fu_238_p9 <= (0=>(in_stream_TVALID), others=>'-');
    tmp_s_fu_719_p3 <= (kk_reg_533 & ap_const_lv7_0);

    trig_data_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st12_fsm_11, tmp_25_fu_991_p2, tmp_25_reg_1319, or_cond_fu_1002_p2, or_cond_reg_1332, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st15_fsm_14, grp_fu_656_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_25_fu_991_p2)) and not((ap_const_lv1_0 = grp_fu_656_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = or_cond_fu_1002_p2))))) then 
            trig_data <= ap_const_lv32_1;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = tmp_25_reg_1319) and not((ap_const_lv1_0 = or_cond_reg_1332))))) then 
            trig_data <= ap_const_lv32_0;
        else 
            trig_data <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    trig_data_ap_vld_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st12_fsm_11, tmp_25_fu_991_p2, tmp_25_reg_1319, or_cond_fu_1002_p2, or_cond_reg_1332, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st15_fsm_14, grp_fu_656_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = tmp_25_reg_1319) and not((ap_const_lv1_0 = or_cond_reg_1332))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_25_fu_991_p2)) and not((ap_const_lv1_0 = grp_fu_656_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = or_cond_fu_1002_p2))))) then 
            trig_data_ap_vld <= ap_const_logic_1;
        else 
            trig_data_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    trig_pixel_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, or_cond_fu_1002_p2, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st15_fsm_14, tmp_40_cast_fu_1016_p1, tmp_39_cast_fu_1035_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            trig_pixel <= tmp_39_cast_fu_1035_p1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = or_cond_fu_1002_p2)))) then 
            trig_pixel <= tmp_40_cast_fu_1016_p1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            trig_pixel <= ap_const_lv32_0;
        else 
            trig_pixel <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    trig_pixel_ap_vld_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, or_cond_fu_1002_p2, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = or_cond_fu_1002_p2))))) then 
            trig_pixel_ap_vld <= ap_const_logic_1;
        else 
            trig_pixel_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ult_fu_1040_p2 <= "1" when (unsigned(thresh1_q0) < unsigned(tmp_23_reg_1313)) else "0";
end behav;
